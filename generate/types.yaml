---
oci_budget_budget:
  klass: OCI::Budget::Models::Budget
  properties:
    id:
      data_type: String
      desc: The OCID of the budget
    compartment_id:
      data_type: String
      reference_type: compartment
      desc: The OCID of the compartment
    target_compartment_id:
      deprecated: true
      reference_type: compartment
      data_type: String
      desc: This is DEPRECTAED. Set the target compartment id in targets instead.
    display_name:
      data_type: String
      desc: The displayName of the budget.
    description:
      data_type: String
      desc: The description of the budget.
    amount:
      data_type: Float
      desc: The amount of the budget expressed as a whole number in the currency of
        the customer's rate card.
    reset_period:
      data_type: String
      desc: The reset period for the budget.
    target_type:
      data_type: String
      desc: The type of target on which the budget is applied.
    targets:
      custom: true
      data_type: Array[String]
      desc: |-
        The list of targets on which the budget is applied.
          If targetType is \"COMPARTMENT\", targets contains list of compartment OCIDs.
          If targetType is \"TAG\", targets contains list of cost tracking tag identifiers in the form of \"{tagNamespace}.{tagKey}.{tagValue}\".
        Curerntly, the array should contain EXACT ONE item.
    lifecycle_state:
      data_type: String
      desc: The current state of the budget.
    alert_rule_count:
      data_type: Integer
      desc: Total number of alert rules in the budget
    version:
      data_type: Integer
      desc: Version of the budget. Starts from 1 and increments by 1.
    actual_spend:
      data_type: Float
      desc: The actual spend in currency for the current budget cycle
    forecasted_spend:
      data_type: Float
      desc: The forecasted spend in currency by the end of the current budget cycle
    time_spend_computed:
      data_type: Runtime
      desc: The time that the budget spend was last computed
    time_created:
      data_type: Runtime
      desc: Time that budget was created
    time_updated:
      data_type: Runtime
      desc: Time that budget was updated
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
  desc: A budget.
  example: |-
    Here is an example on how to use this:

          oci_budget_budget { 'tenant (root)/test_budget':
            ensure             => 'present',
            amount             => 100.0,
            description        => 'test Budget',
          }
oci_core_cpe:
  example: |-
    Here is an example on how to use this:

          oci_core_cpe { 'tenant (root)/test_cpe':
            ensure     => 'present',
            ip_address => '10.0.0.1',
          }
  klass: OCI::Core::Models::Cpe
  properties:
    compartment_id:
      data_type: String
      desc: The OCID of the compartment to contain the CPE.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The CPE's Oracle ID (OCID).
    ip_address:
      data_type: String
      desc: |-
        The public IP address of the on-premises router.

        Example: `143.19.23.16`
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the CPE was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    cpe_device_shape_id:
      reference_type: cpe
      data_type: String
      desc: |-
        The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the CPE device type. You can provide
        a value if you want to later generate CPE device configuration content for IPSec connections
        that use this CPE. You can also call {#update_cpe update_cpe} later to
        provide a value. For a list of possible values, see
        {#list_cpe_device_shapes list_cpe_device_shapes}.

        For more information about generating CPE device configuration content, see:

          * {#get_cpe_device_config_content get_cpe_device_config_content}
          * {#get_ipsec_cpe_device_config_content get_ipsec_cpe_device_config_content}
          * {#get_tunnel_cpe_device_config_content get_tunnel_cpe_device_config_content}
          * {#get_tunnel_cpe_device_config get_tunnel_cpe_device_config}
  desc: |-
    An object you create when setting up an IPSec VPN between your on-premises network
    and VCN. The `Cpe` is a virtual representation of your customer-premises equipment,
    which is the actual router on-premises at your site at your end of the IPSec VPN connection.
    For more information,
    see [Overview of the Networking Service](https://docs.cloud.oracle.com/Content/Network/Concepts/overview.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_dhcp_options:
  example: |-
    Here is an example on how to use this:

        oci_core_dhcp_options { 'tenant (root)/my_options':
          ensure          => 'present',
          options         => [
          {
            'type' => 'DomainNameServer',
            'custom_dns_servers' => [],
            'server_type' => 'VcnLocalPlusInternet'
          },
          {
            'type' => 'SearchDomain',
            'search_domain_names' => ['vcn.oraclevcn.com']
          }],
          vcn => 'VirtualCloudNetwork-20200103-0949',
        }
  klass: OCI::Core::Models::DhcpOptions
  includes:
  - update_and_create_classes
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment to contain the set of DHCP options.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: Oracle ID (OCID) for the set of DHCP options.
    lifecycle_state:
      data_type: String
      desc: The current state of the set of DHCP options.
    options:
      data_type: Array[Oci_config::DhcpOption]
      desc: A set of DHCP options.
    time_created:
      data_type: Runtime
      desc: |-
        Date and time the set of DHCP options was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    vcn_id:
      reference_type: vcn
      data_type: String
      desc: The OCID of the VCN the set of DHCP options belongs to.
  desc: |-
    A set of DHCP options. Used by the VCN to automatically provide configuration
    information to the instances when they boot up. There are two options you can set:

    - {DhcpDnsOption}: Lets you specify how DNS (hostname resolution) is
    handled in the subnets in your VCN.

    - {DhcpSearchDomainOption}: Lets you specify
    a search domain name to use for DNS queries.

    For more information, see  [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/Content/Network/Concepts/dns.htm)
    and [DHCP Options](https://docs.cloud.oracle.com/Content/Network/Tasks/managingDHCP.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_drg:
  example: |-
    Here is an example on how to use this:

          oci_core_drg { 'tenant (root)/my_drg':
            ensure        => 'present',
            freeform_tags => {'test' => 'no'},
          }
  klass: OCI::Core::Models::Drg
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment to contain the DRG.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The DRG's Oracle ID (OCID).
    lifecycle_state:
      data_type: String
      desc: The DRG's current state.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the DRG was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
  desc: |-
    A dynamic routing gateway (DRG), which is a virtual router that provides a path for private
    network traffic between your VCN and your existing network. You use it with other Networking
    Service components to create an IPSec VPN or a connection that uses
    Oracle Cloud Infrastructure FastConnect. For more information, see
    [Overview of the Networking Service](https://docs.cloud.oracle.com/Content/Network/Concepts/overview.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_internet_gateway:
  example: |-
    Here is an example on how to use this:

        oci_core_internet_gateway { 'tenant (root)/my_igw':
          ensure     => 'present',
          vcn        => 'my_compartment/my_own_vcn}',
          is_enabled => true,
        }
  klass: OCI::Core::Models::InternetGateway
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment to contain the internet gateway.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The internet gateway's Oracle ID (OCID).
    is_enabled:
      data_type: Boolean
      desc: Whether the gateway is enabled upon creation.
    lifecycle_state:
      data_type: String
      desc: The internet gateway's current state.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the internet gateway was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    vcn_id:
      reference_type: vcn
      data_type: String
      desc: The OCID of the VCN the internet gateway is attached to.
  desc: |-
    Represents a router that connects the edge of a VCN with the Internet. For an example scenario
    that uses an internet gateway, see
    [Typical Networking Service Scenarios](https://docs.cloud.oracle.com/Content/Network/Concepts/overview.htm#scenarios).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_local_peering_gateway:
  example: |-
    Here is an example on how to use this:

        oci_core_local_peering_gateway { 'tenant (root)/my_peering_gatewaye':
          ensure      => 'present',
          vcn         => 'my_compartment/my_vcn',
          route_table => 'my_compartment/my_route_table',
        }
  klass: OCI::Core::Models::LocalPeeringGateway
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment containing the local peering gateway (LPG).
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name. Does not have to be unique, and it's changeable. Avoid
        entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The LPG's Oracle ID (OCID).
    is_cross_tenancy_peering:
      data_type: Boolean
      desc: |-
        Whether the VCN at the other end of the peering is in a different tenancy.

        Example: `false`
    lifecycle_state:
      data_type: String
      desc: The LPG's current lifecycle state.
    peer_advertised_cidr:
      data_type: String
      desc: |-
        The smallest aggregate CIDR that contains all the CIDR routes advertised by the VCN
        at the other end of the peering from this LPG. See `peerAdvertisedCidrDetails` for
        the individual CIDRs. The value is `null` if the LPG is not peered.

        Example: `192.168.0.0/16`, or if aggregated with `172.16.0.0/24` then `128.0.0.0/1`
    peer_advertised_cidr_details:
      data_type: Array[String]
      desc: |-
        The specific ranges of IP addresses available on or via the VCN at the other
        end of the peering from this LPG. The value is `null` if the LPG is not peered.
        You can use these as destination CIDRs for route rules to route a subnet's
        traffic to this LPG.

        Example: [`192.168.0.0/16`, `172.16.0.0/24`]
    peering_status:
      data_type: String
      desc: |-
        Whether the LPG is peered with another LPG. `NEW` means the LPG has not yet been
        peered. `PENDING` means the peering is being established. `REVOKED` means the
        LPG at the other end of the peering has been deleted.
    peering_status_details:
      data_type: String[1]
      desc: Additional information regarding the peering status, if applicable.
    route_table_id:
      reference_type: routetable
      data_type: String
      desc: |-
        The OCID of the route table the LPG will use.

        If you don't specify a route table here, the LPG is created without an associated route
        table. The Networking service does NOT automatically associate the attached VCN's default route table
        with the LPG.

        For information about why you would associate a route table with an LPG, see
        [Transit Routing: Access to Multiple VCNs in Same Region](https://docs.cloud.oracle.com/Content/Network/Tasks/transitrouting.htm).
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the LPG was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    vcn_id:
      reference_type: vcn
      data_type: String
      desc: The OCID of the VCN the LPG belongs to.
  desc: |-
    A local peering gateway (LPG) is an object on a VCN that lets that VCN peer
    with another VCN in the same region. *Peering* means that the two VCNs can
    communicate using private IP addresses, but without the traffic traversing the
    internet or routing through your on-premises network. For more information,
    see [VCN Peering](https://docs.cloud.oracle.com/Content/Network/Tasks/VCNpeering.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_nat_gateway:
  example: |-
    Here is an example on how to use this:

        oci_core_nat_gateway { 'tenant (root)/my_nat_gatewway':
          ensure      => 'present',
          vcn         => 'my_compartment/my_vcn',
        }
  klass: OCI::Core::Models::NatGateway
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: |-
        The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment to contain the
        NAT gateway.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)
        of the NAT gateway.
    block_traffic:
      data_type: Boolean
      desc: |-
        Whether the NAT gateway blocks traffic through it. The default is `false`.

        Example: `true`
    lifecycle_state:
      data_type: String
      desc: The NAT gateway's current state.
    nat_ip:
      data_type: String
      desc: The IP address associated with the NAT gateway.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the NAT gateway was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    vcn_id:
      reference_type: vcn
      data_type: String
      desc: The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)
        of the VCN the gateway belongs to.
  desc: |-
    A NAT (Network Address Translation) gateway, which represents a router that lets instances
    without public IPs contact the public internet without exposing the instance to inbound
    internet traffic. For more information, see
    [NAT Gateway](https://docs.cloud.oracle.com/Content/Network/Tasks/NATgateway.htm).

    To use any of the API operations, you must be authorized in an
    IAM policy. If you are not authorized, talk to an
    administrator. If you are an administrator who needs to write
    policies to give users access, see [Getting Started with
    Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_network_security_group:
  example: |-
    Here is an example on how to use this:

        oci_core_network_security_group { 'tenant (root)/my_security_group':
          ensure      => 'present',
          vcn         => 'my_compartment/my_vcn',
        }
  klass: OCI::Core::Models::NetworkSecurityGroup
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: |-
        The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment to contain the
        network security group.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name for the network security group. Does not have to be unique.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)
        of the network security group.
    lifecycle_state:
      data_type: String
      desc: The network security group's current state.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the network security group was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    vcn_id:
      reference_type: vcn
      data_type: String
      desc: |-
        The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the VCN to create the network
        security group in.
  desc: |-
    A *network security group* (NSG) provides virtual firewall rules for a specific set of
    {Vnic} in a VCN. Compare NSGs with {SecurityList},
    which provide virtual firewall rules to all the VNICs in a *subnet*.

    A network security group consists of two items:

      * The set of {Vnic} that all have the same security rule needs (for
        example, a group of Compute instances all running the same application)
      * A set of NSG {SecurityRule} that apply to the VNICs in the group

    After creating an NSG, you can add VNICs and security rules to it. For example, when you create
    an instance, you can specify one or more NSGs to add the instance to (see
    {#create_vnic_details create_vnic_details}). Or you can add an existing
    instance to an NSG with {#update_vnic update_vnic}.

    To add security rules to an NSG, see
    {#add_network_security_group_security_rules add_network_security_group_security_rules}.

    To list the VNICs in an NSG, see
    {#list_network_security_group_vnics list_network_security_group_vnics}.

    To list the security rules in an NSG, see
    {#list_network_security_group_security_rules list_network_security_group_security_rules}.

    For more information about network security groups, see
    [Network Security Groups](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/networksecuritygroups.htm).

    **Important:** Oracle Cloud Infrastructure Compute service images automatically include firewall rules (for example,
    Linux iptables, Windows firewall). If there are issues with some type of access to an instance,
    make sure all of the following are set correctly:

      * Any security rules in any NSGs the instance's VNIC belongs to
      * Any {SecurityList} associated with the instance's subnet
      * The instance's OS firewall rules

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_remote_peering_connection:
  klass: OCI::Core::Models::RemotePeeringConnection
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment to contain the RPC.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    drg_id:
      reference_type: drg
      data_type: String
      desc: The OCID of the DRG the RPC belongs to.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The OCID of the RPC.
    is_cross_tenancy_peering:
      data_type: Boolean
      desc: |-
        Whether the VCN at the other end of the peering is in a different tenancy.

        Example: `false`
    lifecycle_state:
      data_type: String
      desc: The RPC's current lifecycle state.
    peer_id:
      reference_type: peer
      data_type: String
      desc: If this RPC is peered, this value is the OCID of the other RPC.
    peer_region_name:
      data_type: String
      desc: |-
        If this RPC is peered, this value is the region that contains the other RPC.

        Example: `us-ashburn-1`
    peer_tenancy_id:
      reference_type: tenancy
      data_type: String
      desc: If this RPC is peered, this value is the OCID of the other RPC's tenancy.
    peering_status:
      data_type: String
      desc: |-
        Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been
        peered. `PENDING` means the peering is being established. `REVOKED` means the
        RPC at the other end of the peering has been deleted.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the RPC was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
  desc: |-
    A remote peering connection (RPC) is an object on a DRG that lets the VCN that is attached
    to the DRG peer with a VCN in a different region. *Peering* means that the two VCNs can
    communicate using private IP addresses, but without the traffic traversing the internet or
    routing through your on-premises network. For more information, see
    [VCN Peering](https://docs.cloud.oracle.com/Content/Network/Tasks/VCNpeering.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_route_table:
  example: |-
    Here is an example on how to use this:

        oci_core_route_table { 'tenant (root)/my_route_table':
          ensure      => 'present',
          vcn         => 'my_compartment/my_vcn',
          route_rules => [
            {
              'cidr_block' => '0.0.0.0/0',
              'destination' => '0.0.0.0/0',
              'destination_type' => 'CIDR_BLOCK',
              'network_entity_type' => 'internetgateway',
              'network_entity' => 'my_compartment/my_ig'
            }
          ],
        }
        oci_core_cpe { 'tenant (root)/test_cpe':
          ensure     => 'present',
          ip_address => '10.0.0.1',
        }
  klass: OCI::Core::Models::RouteTable
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment to contain the route table.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The route table's Oracle ID (OCID).
    lifecycle_state:
      data_type: String
      desc: The route table's current state.
    route_rules:
      data_type: Array[Oci_config::RouteRule]
      desc: The collection of rules used for routing destination IPs to network devices.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the route table was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    vcn_id:
      reference_type: vcn
      data_type: String
      desc: The OCID of the VCN the route table belongs to.
  desc: |-
    A collection of `RouteRule` objects, which are used to route packets
    based on destination IP to a particular network entity. For more information, see
    [Overview of the Networking Service](https://docs.cloud.oracle.com/Content/Network/Concepts/overview.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_security_list:
  example: |-
    Here is an example on how to use this:

        oci_core_security_list { 'tenant (root)/my_security_list':
          ensure                 => 'present',
          vcn                    => 'my_compartment/my_vcn',
          egress_security_rules  => [
          {
            'destination' => '0.0.0.0/0',
            'destination_type' => 'CIDR_BLOCK',
            'is_stateless' => false,
            'protocol' => 'all'
          }],
          ingress_security_rules => [
          {
            'is_stateless' => false,
            'protocol' => '6',
            'source' => '0.0.0.0/0',
            'source_type' => 'CIDR_BLOCK',
            'tcp_options' => {
              'destination_port_range' => {
                'max' => 22,
                'min' => 22
              }
            }
          },
          {
            'icmp_options' => {
              'code' => 4,
              'type' => 3
            },
            'is_stateless' => false,
            'protocol' => '1',
            'source' => '0.0.0.0/0',
            'source_type' => 'CIDR_BLOCK'
          },
          {
            'icmp_options' => {
              'type' => 3
            },
            'is_stateless' => false,
            'protocol' => '1',
            'source' => '10.0.0.0/16',
            'source_type' => 'CIDR_BLOCK'
          }],
        }
  klass: OCI::Core::Models::SecurityList
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment to contain the security list.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    egress_security_rules:
      data_type: Array[Oci_config::EgressSecurityRule]
      desc: Rules for allowing egress IP packets.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The security list's Oracle Cloud ID (OCID).
    ingress_security_rules:
      data_type: Array[Oci_config::IngressSecurityRule]
      desc: Rules for allowing ingress IP packets.
    lifecycle_state:
      data_type: String
      desc: The security list's current state.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the security list was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    vcn_id:
      reference_type: vcn
      data_type: String
      desc: The OCID of the VCN the security list belongs to.
  desc: |-
    A set of virtual firewall rules for your VCN. Security lists are configured at the subnet
    level, but the rules are applied to the ingress and egress traffic for the individual instances
    in the subnet. The rules can be stateful or stateless. For more information, see
    [Security Lists](https://docs.cloud.oracle.com/Content/Network/Concepts/securitylists.htm).
    **Note:** Compare security lists to {NetworkSecurityGroup}s,
    which let you apply a set of security rules to a *specific set of VNICs* instead of an entire
    subnet. Oracle recommends using network security groups instead of security lists, although you
    can use either or both together.

    **Important:** Oracle Cloud Infrastructure Compute service images automatically include firewall rules (for example,
    Linux iptables, Windows firewall). If there are issues with some type of access to an instance,
    make sure both the security lists associated with the instance's subnet and the instance's
    firewall rules are set correctly.

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_service_gateway:
  example: |-
    Here is an example on how to use this:

        oci_core_service_gateway { 'tenant (root)/my_service_gateway':
          ensure     => 'present',
          vcn        => 'my_compartment/my_vcn',
          services   => [],
        }
  klass: OCI::Core::Models::ServiceGateway
  properties:
    block_traffic:
      data_type: Boolean
      desc: |-
        Whether the service gateway blocks all traffic through it. The default is `false`. When
        this is `true`, traffic is not routed to any services, regardless of route rules.

        Example: `true`
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The [OCID] (https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)
        of the compartment to contain the service gateway.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)
        of the service gateway.
    lifecycle_state:
      data_type: String
      desc: The service gateway's current state.
    route_table_id:
      reference_type: routetable
      data_type: String
      desc: |-
        The OCID of the route table the service gateway will use.

        If you don't specify a route table here, the service gateway is created without an associated route
        table. The Networking service does NOT automatically associate the attached VCN's default route table
        with the service gateway.

        For information about why you would associate a route table with a service gateway, see
        [Transit Routing: Private Access to Oracle Services](https://docs.cloud.oracle.com/Content/Network/Tasks/transitroutingoracleservices.htm).
    services:
      data_type: Array[Oci_config::ServiceIdRequestDetails]
      desc: |-
        List of the OCIDs of the {Service} objects to
        enable for the service gateway. This list can be empty if you don't want to enable any
        `Service` objects when you create the gateway. You can enable a `Service`
        object later by using either {#attach_service_id attach_service_id}
        or {#update_service_gateway update_service_gateway}.

        For each enabled `Service`, make sure there's a route rule with the `Service` object's `cidrBlock`
        as the rule's destination and the service gateway as the rule's target. See
        {RouteTable}.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the service gateway was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    vcn_id:
      reference_type: vcn
      data_type: String
      desc: The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)
        of the VCN.
  desc: |-
    Represents a router that lets your VCN privately access specific Oracle services such as Object
    Storage without exposing the VCN to the public internet. Traffic leaving the VCN and destined
    for a supported Oracle service (see {#list_services list_services}) is
    routed through the service gateway and does not traverse the internet. The instances in the VCN
    do not need to have public IP addresses nor be in a public subnet. The VCN does not need an internet gateway
    for this traffic. For more information, see
    [Access to Oracle Services: Service Gateway](https://docs.cloud.oracle.com/Content/Network/Tasks/servicegateway.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_subnet:
  example: |-
    Here is an example on how to use this:

        oci_core_subnet { 'tenant (root)/my_subnet':
          ensure             => 'present',
          cidr_block         => '10.0.0.0/24',
          dhcp_options       => 'my_compartment/my_dhcp_options',
          dns_label          => 'subnet',
          route_table        => 'my_compartment/my_route_table_',
          security_lists     => ['my_compartment/my_security_list_'],
          subnet_domain_name => 'subnet.vcn.oraclevcn.com',
          vcn                => 'my_compartment/my_vcn',
          virtual_router_ip  => '10.0.0.1',
          virtual_router_mac => '00:00:17:9B:B0:3F',
        }
  klass: OCI::Core::Models::Subnet
  properties:
    availability_domain:
      data_type: String
      desc: |-
        Controls whether the subnet is regional or specific to an availability domain. Oracle
        recommends creating regional subnets because they're more flexible and make it easier to
        implement failover across availability domains. Originally, AD-specific subnets were the
        only kind available to use.

        To create a regional subnet, omit this attribute. Then any resources later created in this
        subnet (such as a Compute instance) can be created in any availability domain in the region.

        To instead create an AD-specific subnet, set this attribute to the availability domain you
        want this subnet to be in. Then any resources later created in this subnet can only be
        created in that availability domain.

        Example: `Uocm:PHX-AD-1`
    cidr_block:
      data_type: String
      desc: |-
        The CIDR IP address range of the subnet.

        Example: `172.16.1.0/24`
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment to contain the subnet.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    dhcp_options_id:
      reference_type: dhcpoptions
      data_type: String
      desc: |-
        The OCID of the set of DHCP options the subnet will use. If you don't
        provide a value, the subnet uses the VCN's default set of DHCP options.
    display_name:
      data_type: String
      desc: A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    dns_label:
      data_type: String
      desc: |-
        A DNS label for the subnet, used in conjunction with the VNIC's hostname and
        VCN's DNS label to form a fully qualified domain name (FQDN) for each VNIC
        within this subnet (for example, `bminstance-1.subnet123.vcn1.oraclevcn.com`).
        Must be an alphanumeric string that begins with a letter and is unique within the VCN.
        The value cannot be changed.

        This value must be set if you want to use the Internet and VCN Resolver to resolve the
        hostnames of instances in the subnet. It can only be set if the VCN itself
        was created with a DNS label.

        For more information, see
        [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/Content/Network/Concepts/dns.htm).

        Example: `subnet123`
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The subnet's Oracle ID (OCID).
    ipv6_cidr_block:
      data_type: String
      desc: |-
        Use this to enable IPv6 addressing for this subnet. The VCN must be enabled for IPv6.
        You can't change this subnet characteristic later. All subnets are /64 in size. The subnet
        portion of the IPv6 address is the fourth hextet from the left (1111 in the following example).

        For important details about IPv6 addressing in a VCN, see [IPv6 Addresses](https://docs.cloud.oracle.com/Content/Network/Concepts/ipv6.htm).

        Example: `2001:0db8:0123:1111::/64`
    ipv6_public_cidr_block:
      data_type: String
      desc: |-
        For an IPv6-enabled subnet, this is the IPv6 CIDR block for the subnet's public IP address
        space. The subnet size is always /64. The left 48 bits are inherited from the
        `ipv6PublicCidrBlock` of the {Vcn},
        and the remaining 16 bits are from the subnet's `ipv6CidrBlock`.

        Example: `2001:0db8:0123:1111::/64`
    ipv6_virtual_router_ip:
      data_type: String
      desc: |-
        For an IPv6-enabled subnet, this is the IPv6 address of the virtual router.

        Example: `2001:0db8:0123:1111:89ab:cdef:1234:5678`
    lifecycle_state:
      data_type: String
      desc: The subnet's current state.
    prohibit_public_ip_on_vnic:
      data_type: Boolean
      desc: |-
        Whether VNICs within this subnet can have public IP addresses.
        Defaults to false, which means VNICs created in this subnet will
        automatically be assigned public IP addresses unless specified
        otherwise during instance launch or VNIC creation (with the
        `assignPublicIp` flag in {CreateVnicDetails}).
        If `prohibitPublicIpOnVnic` is set to true, VNICs created in this
        subnet cannot have public IP addresses (that is, it's a private
        subnet).

        For IPv6, if `prohibitPublicIpOnVnic` is set to `true`, internet access is not allowed for any
        IPv6s assigned to VNICs in the subnet.

        Example: `true`
    route_table_id:
      reference_type: routetable
      data_type: String
      desc: |-
        The OCID of the route table the subnet will use. If you don't provide a value,
        the subnet uses the VCN's default route table.
    security_list_ids:
      reference_type: securitylist
      data_type: Array[String]
      desc: |-
        The OCIDs of the security list or lists the subnet will use. If you don't
        provide a value, the subnet uses the VCN's default security list.
        Remember that security lists are associated *with the subnet*, but the
        rules are applied to the individual VNICs in the subnet.
    subnet_domain_name:
      data_type: String
      desc: |-
        The subnet's domain name, which consists of the subnet's DNS label,
        the VCN's DNS label, and the `oraclevcn.com` domain.

        For more information, see
        [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/Content/Network/Concepts/dns.htm).

        Example: `subnet123.vcn1.oraclevcn.com`
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the subnet was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    vcn_id:
      reference_type: vcn
      data_type: String
      desc: The OCID of the VCN to contain the subnet.
    virtual_router_ip:
      data_type: String
      desc: |-
        The IP address of the virtual router.

        Example: `10.0.14.1`
    virtual_router_mac:
      data_type: String
      desc: |-
        The MAC address of the virtual router.

        Example: `00:00:17:B6:4D:DD`
  desc: |-
    A logical subdivision of a VCN. Each subnet
    consists of a contiguous range of IP addresses that do not overlap with
    other subnets in the VCN. Example: 172.16.1.0/24. For more information, see
    [Overview of the Networking Service](https://docs.cloud.oracle.com/Content/Network/Concepts/overview.htm) and
    [VCNs and Subnets](https://docs.cloud.oracle.com/Content/Network/Tasks/managingVCNs.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_vcn:
  example: |-
    Here is an example on how to use this:

        oci_core_vcn { 'tenant (root)/my_vcn':
            ensure        => 'present',
            cidr_block    => '10.0.0.0/16',
            freeform_tags => {'test' => 'yes'},
          }
  klass: OCI::Core::Models::Vcn
  properties:
    cidr_block:
      data_type: String
      desc: |-
        The CIDR IP address block of the VCN.

        Example: `172.16.0.0/16`
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment to contain the VCN.
    default_dhcp_options_id:
      custom: true
      reference_type: dhcpoptions
      data_type: String
      desc: The OCID for the VCN's default set of DHCP options.
    default_route_table_id:
      reference_type: routetable
      data_type: String
      desc: The OCID for the VCN's default route table.
    default_security_list_id:
      reference_type: securitylist
      data_type: String
      desc: The OCID for the VCN's default security list.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    dns_label:
      data_type: String
      desc: |-
        A DNS label for the VCN, used in conjunction with the VNIC's hostname and
        subnet's DNS label to form a fully qualified domain name (FQDN) for each VNIC
        within this subnet (for example, `bminstance-1.subnet123.vcn1.oraclevcn.com`).
        Not required to be unique, but it's a best practice to set unique DNS labels
        for VCNs in your tenancy. Must be an alphanumeric string that begins with a letter.
        The value cannot be changed.

        You must set this value if you want instances to be able to use hostnames to
        resolve other instances in the VCN. Otherwise the Internet and VCN Resolver
        will not work.

        For more information, see
        [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/Content/Network/Concepts/dns.htm).

        Example: `vcn1`
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The VCN's Oracle ID (OCID).
    ipv6_cidr_block:
      data_type: String
      desc: |-
        If you enable IPv6 for the VCN (see `isIpv6Enabled`), you may optionally provide an IPv6
        /48 CIDR block from the supported ranges (see [IPv6 Addresses](https://docs.cloud.oracle.com/Content/Network/Concepts/ipv6.htm).
        The addresses in this block will be considered private and cannot be accessed
        from the internet. The documentation refers to this as a *custom CIDR* for the VCN.

        If you don't provide a custom CIDR for the VCN, Oracle assigns the VCN's IPv6 /48 CIDR block.

        Regardless of whether you or Oracle assigns the `ipv6CidrBlock`,
        Oracle *also* assigns the VCN an IPv6 CIDR block for the VCN's public IP address space
        (see the `ipv6PublicCidrBlock` of the {Vcn} object). If you do
        not assign a custom CIDR, Oracle uses the *same* Oracle-assigned CIDR for both the private
        IP address space (`ipv6CidrBlock` in the `Vcn` object) and the public IP addreses space
        (`ipv6PublicCidrBlock` in the `Vcn` object). This means that a given VNIC might use the same
        IPv6 IP address for both private and public (internet) communication. You control whether
        an IPv6 address can be used for internet communication by using the `isInternetAccessAllowed`
        attribute in the {Ipv6} object.

        For important details about IPv6 addressing in a VCN, see [IPv6 Addresses](https://docs.cloud.oracle.com/Content/Network/Concepts/ipv6.htm).

        Example: `2001:0db8:0123::/48`
    ipv6_public_cidr_block:
      data_type: String
      desc: |-
        For an IPv6-enabled VCN, this is the IPv6 CIDR block for the VCN's public IP address space.
        The VCN size is always /48. This CIDR is always provided by Oracle. If you don't provide a
        custom CIDR for the `ipv6CidrBlock` when creating the VCN, Oracle assigns that value and also
        uses it for `ipv6PublicCidrBlock`. Oracle uses addresses from this block for the `publicIpAddress`
        attribute of an {Ipv6} that has internet access allowed.

        Example: `2001:0db8:0123::/48`
    lifecycle_state:
      data_type: String
      desc: The VCN's current state.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the VCN was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    vcn_domain_name:
      data_type: String
      desc: |-
        The VCN's domain name, which consists of the VCN's DNS label, and the
        `oraclevcn.com` domain.

        For more information, see
        [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/Content/Network/Concepts/dns.htm).

        Example: `vcn1.oraclevcn.com`
    is_ipv6_enabled:
      data_type: Boolean
      desc: |-
        Whether IPv6 is enabled for the VCN. Default is `false`. You cannot change this later.
        For important details about IPv6 addressing in a VCN, see [IPv6 Addresses](https://docs.cloud.oracle.com/Content/Network/Concepts/ipv6.htm).

        Example: `true`
  desc: |-
    A virtual cloud network (VCN). For more information, see
    [Overview of the Networking Service](https://docs.cloud.oracle.com/Content/Network/Concepts/overview.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_virtual_circuit:
  klass: OCI::Core::Models::VirtualCircuit
  properties:
    bandwidth_shape_name:
      data_type: String
      desc: |-
        The provisioned data rate of the connection.  To get a list of the
        available bandwidth levels (that is, shapes), see
        {#list_fast_connect_provider_virtual_circuit_bandwidth_shapes list_fast_connect_provider_virtual_circuit_bandwidth_shapes}.

        Example: `10 Gbps`
    bgp_management:
      deprecated: true
      data_type: String
      desc: |-
        Deprecated. Instead use the information in
        {FastConnectProviderService}.
    bgp_session_state:
      data_type: String
      desc: The state of the BGP session associated with the virtual circuit.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment to contain the virtual circuit.
    cross_connect_mappings:
      data_type: Array[Oci_config::CrossConnectMapping]
      desc: |-
        Create a `CrossConnectMapping` for each cross-connect or cross-connect
        group this virtual circuit will run on.
    customer_bgp_asn:
      data_type: Integer
      desc: |-
        Deprecated. Instead use `customerAsn`.
        If you specify values for both, the request will be rejected.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    gateway_id:
      reference_type: internetgateway
      data_type: String
      desc: |-
        For private virtual circuits only. The OCID of the {Drg}
        that this virtual circuit uses.
    id:
      data_type: String
      desc: The virtual circuit's Oracle ID (OCID).
    lifecycle_state:
      data_type: String
      desc: |-
        The virtual circuit's current state. For information about
        the different states, see
        [FastConnect Overview](https://docs.cloud.oracle.com/Content/Network/Concepts/fastconnect.htm).
    oracle_bgp_asn:
      data_type: Integer
      desc: The Oracle BGP ASN.
    provider_name:
      deprecated: true
      data_type: String
      desc: |-
        Deprecated. Instead use `providerServiceId`.
        To get a list of the provider names, see
        {#list_fast_connect_provider_services list_fast_connect_provider_services}.
    provider_service_id:
      reference_type: service
      data_type: String
      desc: |-
        The OCID of the service offered by the provider (if you're connecting
        via a provider). To get a list of the available service offerings, see
        {#list_fast_connect_provider_services list_fast_connect_provider_services}.
    provider_service_key_name:
      data_type: String
      desc: The service key name offered by the provider (if the customer is connecting
        via a provider).
    provider_service_name:
      deprecated: true
      data_type: String
      desc: |-
        Deprecated. Instead use `providerServiceId`.
        To get a list of the provider names, see
        {#list_fast_connect_provider_services list_fast_connect_provider_services}.
    provider_state:
      data_type: String
      desc: |-
        The provider's state in relation to this virtual circuit (if the
        customer is connecting via a provider). ACTIVE means
        the provider has provisioned the virtual circuit from their end.
        INACTIVE means the provider has not yet provisioned the virtual
        circuit, or has de-provisioned it.
    public_prefixes:
      data_type: Array[Oci_config::CreateVirtualCircuitPublicPrefixDetails]
      desc: |-
        For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to
        advertise across the connection.
    reference_comment:
      data_type: String
      desc: |-
        Provider-supplied reference information about this virtual circuit
        (if the customer is connecting via a provider).
    region:
      data_type: String
      desc: |-
        The Oracle Cloud Infrastructure region where this virtual
        circuit is located.
        Example: `phx`
    service_type:
      data_type: String
      desc: Provider service type.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the virtual circuit was created,
        in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    type:
      data_type: String
      desc: |-
        The type of IP addresses used in this virtual circuit. PRIVATE
        means [RFC 1918](https://tools.ietf.org/html/rfc1918) addresses
        (10.0.0.0/8, 172.16/12, and 192.168/16).
    customer_asn:
      data_type: Integer
      desc: |-
        Your BGP ASN (either public or private). Provide this value only if
        there's a BGP session that goes from your edge router to Oracle.
        Otherwise, leave this empty or null.
        Can be a 2-byte or 4-byte ASN. Uses \"asplain\" format.

        Example: `12345` (2-byte) or `1587232876` (4-byte)
  desc: |-
    For use with Oracle Cloud Infrastructure FastConnect.

    A virtual circuit is an isolated network path that runs over one or more physical
    network connections to provide a single, logical connection between the edge router
    on the customer's existing network and Oracle Cloud Infrastructure. *Private*
    virtual circuits support private peering, and *public* virtual circuits support
    public peering. For more information, see [FastConnect Overview](https://docs.cloud.oracle.com/Content/Network/Concepts/fastconnect.htm).

    Each virtual circuit is made up of information shared between a customer, Oracle,
    and a provider (if the customer is using FastConnect via a provider). Who fills in
    a given property of a virtual circuit depends on whether the BGP session related to
    that virtual circuit goes from the customer's edge router to Oracle, or from the provider's
    edge router to Oracle. Also, in the case where the customer is using a provider, values
    for some of the properties may not be present immediately, but may get filled in as the
    provider and Oracle each do their part to provision the virtual circuit.

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_app_catalog_subscription:
  klass: OCI::Core::Models::AppCatalogSubscription
  properties:
    publisher_name:
      data_type: String
      desc: Name of the publisher who published this listing.
    listing_id:
      reference_type: listing
      data_type: String
      desc: The OCID of the listing.
    listing_resource_version:
      data_type: String
      desc: Listing resource version.
    listing_resource_id:
      reference_type: resource
      data_type: String
      desc: Listing resource id.
    display_name:
      data_type: String
      desc: The display name of the listing.
    summary:
      data_type: String
      desc: The short summary to the listing.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The compartmentID for the subscription.
    time_created:
      data_type: Runtime
      desc: |-
        Date and time at which the subscription was created, in RFC3339 format.
        Example: `2018-03-20T12:32:53.532Z`
    oracle_terms_of_use_link:
      data_type: String
      desc: Oracle TOU link
    eula_link:
      data_type: String
      desc: EULA link
    time_retrieved:
      data_type: Runtime
      desc: |-
        Date and time the agreements were retrieved, in RFC3339 format.
        Example: `2018-03-20T12:32:53.532Z`
    signature:
      data_type: String
      desc: A generated signature for this listing resource version retrieved the
        agreements API.
  desc: a subscription for a listing resource version.
oci_core_dedicated_vm_host:
  klass: OCI::Core::Models::DedicatedVmHost
  properties:
    availability_domain:
      data_type: String
      desc: |-
        The availability domain of the dedicated virtual machine host.

        Example: `Uocm:PHX-AD-1`
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment.
    dedicated_vm_host_shape:
      data_type: String
      desc: |-
        The dedicated virtual machine host shape. The shape determines the number of CPUs and
        other resources available for VM instances launched on the dedicated virtual machine host.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.

        Example: `My dedicated VM host`
    fault_domain:
      data_type: String
      desc: |-
        The fault domain for the dedicated virtual machine host's assigned instances.
        For more information, see [Fault Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm#fault).
        If you do not specify the fault domain, the system selects one for you. To change the fault domain for a dedicated virtual machine host,
        delete it and create a new dedicated virtual machine host in the preferred fault domain.

        To get a list of fault domains, use the `ListFaultDomains` operation in
        the [Identity and Access Management Service API](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/).

        Example: `FAULT-DOMAIN-1`
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The OCID of the dedicated VM host.
    lifecycle_state:
      data_type: String
      desc: The current state of the dedicated VM host.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the dedicated VM host was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    total_ocpus:
      data_type: Float
      desc: The total OCPUs of the dedicated VM host.
    remaining_ocpus:
      data_type: Float
      desc: The available OCPUs of the dedicated VM host.
  desc: |-
    A dedicated virtual machine host that enables you to host multiple VM instances
    on a dedicated host that is not shared with other tenancies.
oci_core_image:
  klass: OCI::Core::Models::Image
  properties:
    base_image_id:
      reference_type: image
      data_type: String
      desc: The OCID of the image originally used to launch the instance.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment you want the image to be created in.
    create_image_allowed:
      data_type: Boolean
      desc: |-
        Whether instances launched with this image can be used to create new images.
        For example, you cannot create an image of an Oracle Database instance.

        Example: `true`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name for the image. It does not have to be unique, and it's changeable.
        Avoid entering confidential information.

        You cannot use an Oracle-provided image name as a custom image name.

        Example: `My Oracle Linux image`
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The OCID of the image.
    launch_mode:
      data_type: String
      desc: |-
        Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
        * `NATIVE` - VM instances launch with paravirtualized boot and VFIO devices. The default value for Oracle-provided images.
        * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
        * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using virtio drivers.
        * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
    launch_options:
      data_type: Oci_config::LaunchOptions
      desc: ''
    lifecycle_state:
      data_type: String
      desc: This attribute is required.
    operating_system:
      data_type: String
      desc: |-
        The image's operating system.

        Example: `Oracle Linux`
    operating_system_version:
      data_type: String
      desc: |-
        The image's operating system version.

        Example: `7.2`
    agent_features:
      data_type: Oci_config::InstanceAgentFeatures
      desc: ''
    size_in_mbs:
      data_type: Integer
      desc: |-
        The boot volume size for an instance launched from this image, (1 MB = 1048576 bytes).
        Note this is not the same as the size of the image when it was exported or the actual size of the image.

        Example: `47694`
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the image was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    image_source_details:
      data_type: Oci_config::ImageSourceDetails
      desc: Details for creating an image through import
    instance_id:
      reference_type: instance
      data_type: String
      desc: The OCID of the instance you want to use as the basis for the image.
  desc: |-
    A boot disk image for launching an instance. For more information, see
    [Overview of the Compute Service](https://docs.cloud.oracle.com/Content/Compute/Concepts/computeoverview.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_instance:
  example: |-
    Here is an example on how to use this:

        oci_core_instance { 'tenant (root)/my_instance':
          ensure              => 'present',
          availability_domain => 'arMl:EU-FRANKFURT-1-AD-1',
          fault_domain        => 'FAULT-DOMAIN-2',
          image               => 'Oracle-Linux-7.7-2019.12.18-0',
          launch_mode         => 'NATIVE',
          region              => 'eu-frankfurt-1',
          shape               => 'VM.Standard2.1',
          vnics               => {
            'nic1' => {
              'nic_index' => 0,
              'hostname_label' => 'my_host',
              'is_primary' => true,
              'skip_source_dest_check' => true,
              'subnet' => 'Public Subnet'
            }
          },
          volumes             => {
            'data_disk_1' => {
              'attachment_type' => 'paravirtualized',
              'device' => '/dev/oracleoci/oraclevdb',
              'display_name' => 'data_disk_1',
              'is_read_only' => true,
            },
            'data_disk_2' => {
              'attachment_type' => 'paravirtualized',
              'device' => '/dev/oracleoci/oraclevdc',
              'display_name' => 'data_disk_2',
              'is_read_only' => true,
            }
          },
        }
  klass: OCI::Core::Models::Instance
  properties:
    volumes:
      custom: true
    boot_volumes:
      custom: true
    vnics:
      custom: true
    availability_domain:
      data_type: String
      desc: |-
        The availability domain of the instance.

        Example: `Uocm:PHX-AD-1`
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment.
    dedicated_vm_host_id:
      reference_type: dedicatedvmhost
      data_type: String
      desc: The OCID of dedicated VM host.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.

        Example: `My bare metal instance`
    extended_metadata:
      data_type: Hash[String, Any]
      desc: |-
        Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the 'metadata' object.

        They are distinguished from 'metadata' fields in that these can be nested JSON objects (whereas 'metadata' fields are string/string maps only).
    fault_domain:
      data_type: String
      desc: |-
        A fault domain is a grouping of hardware and infrastructure within an availability domain.
        Each availability domain contains three fault domains. Fault domains let you distribute your
        instances so that they are not on the same physical hardware within a single availability domain.
        A hardware failure or Compute hardware maintenance that affects one fault domain does not affect
        instances in other fault domains.

        If you do not specify the fault domain, the system selects one for you. To change the fault
        domain for an instance, terminate it and launch a new instance in the preferred fault domain.

        To get a list of fault domains, use the
        {#list_fault_domains list_fault_domains} operation in the
        Identity and Access Management Service API.

        Example: `FAULT-DOMAIN-1`
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The OCID of the instance.
    image_id:
      deprecated: true
      reference_type: image
      data_type: String
      desc: |-
        Deprecated. Use `sourceDetails` with {#instance_source_via_image_details instance_source_via_image_details}
        source type instead. If you specify values for both, the values must match.
    ipxe_script:
      data_type: String
      desc: |-
        This is an advanced option.

        When a bare metal or virtual machine
        instance boots, the iPXE firmware that runs on the instance is
        configured to run an iPXE script to continue the boot process.

        If you want more control over the boot process, you can provide
        your own custom iPXE script that will run when the instance boots;
        however, you should be aware that the same iPXE script will run
        every time an instance boots; not only after the initial
        LaunchInstance call.

        The default iPXE script connects to the instance's local boot
        volume over iSCSI and performs a network boot. If you use a custom iPXE
        script and want to network-boot from the instance's local boot volume
        over iSCSI the same way as the default iPXE script, you should use the
        following iSCSI IP address: 169.254.0.2, and boot volume IQN:
        iqn.2015-02.oracle.boot.

        For more information about the Bring Your Own Image feature of
        Oracle Cloud Infrastructure, see
        [Bring Your Own Image](https://docs.cloud.oracle.com/Content/Compute/References/bringyourownimage.htm).

        For more information about iPXE, see http://ipxe.org.
    launch_mode:
      data_type: String
      desc: |-
        Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
        * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for Oracle-provided images.
        * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
        * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using virtio drivers.
        * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
    launch_options:
      data_type: Oci_config::LaunchOptions
      desc: ''
    lifecycle_state:
      data_type: String
      desc: The current state of the instance.
    metadata:
      data_type: Hash[String, String]
      desc: |-
        Custom metadata key/value pairs that you provide, such as the SSH public key
        required to connect to the instance.

        A metadata service runs on every launched instance. The service is an HTTP
        endpoint listening on 169.254.169.254. You can use the service to:

        * Provide information to [Cloud-Init](https://cloudinit.readthedocs.org/en/latest/)
          to be used for various system initialization tasks.

        * Get information about the instance, including the custom metadata that you
          provide when you launch the instance.

         **Providing Cloud-Init Metadata**

         You can use the following metadata key names to provide information to
         Cloud-Init:

         **\"ssh_authorized_keys\"** - Provide one or more public SSH keys to be
         included in the `~/.ssh/authorized_keys` file for the default user on the
         instance. Use a newline character to separate multiple keys. The SSH
         keys must be in the format necessary for the `authorized_keys` file, as shown
         in the example below.

         **\"user_data\"** - Provide your own base64-encoded data to be used by
         Cloud-Init to run custom scripts or provide custom Cloud-Init configuration. For
         information about how to take advantage of user data, see the
         [Cloud-Init Documentation](http://cloudinit.readthedocs.org/en/latest/topics/format.html).

         **Note:** Cloud-Init does not pull this data from the `http://169.254.169.254/opc/v1/instance/metadata/`
         path. When the instance launches and either of these keys are provided, the key values are formatted as
         OpenStack metadata and copied to the following locations, which are recognized by Cloud-Init:

         `http://169.254.169.254/openstack/latest/meta_data.json` - This JSON blob
         contains, among other things, the SSH keys that you provided for
          **\"ssh_authorized_keys\"**.

         `http://169.254.169.254/openstack/latest/user_data` - Contains the
         base64-decoded data that you provided for **\"user_data\"**.

         **Metadata Example**

              \"metadata\" : {
                 \"quake_bot_level\" : \"Severe\",
                 \"ssh_authorized_keys\" : \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCZ06fccNTQfq+xubFlJ5ZR3kt+uzspdH9tXL+lAejSM1NXM+CFZev7MIxfEjas06y80ZBZ7DUTQO0GxJPeD8NCOb1VorF8M4xuLwrmzRtkoZzU16umt4y1W0Q4ifdp3IiiU0U8/WxczSXcUVZOLqkz5dc6oMHdMVpkimietWzGZ4LBBsH/LjEVY7E0V+a0sNchlVDIZcm7ErReBLcdTGDq0uLBiuChyl6RUkX1PNhusquTGwK7zc8OBXkRuubn5UKXhI3Ul9Nyk4XESkVWIGNKmw8mSpoJSjR8P9ZjRmcZVo8S+x4KVPMZKQEor== ryan.smith@company.com
                 ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAzJSAtwEPoB3Jmr58IXrDGzLuDYkWAYg8AsLYlo6JZvKpjY1xednIcfEVQJm4T2DhVmdWhRrwQ8DmayVZvBkLt+zs2LdoAJEVimKwXcJFD/7wtH8Lnk17HiglbbbNXsemjDY0hea4JUE5CfvkIdZBITuMrfqSmA4n3VNoorXYdvtTMoGG8fxMub46RPtuxtqi9bG9Zqenordkg5FJt2mVNfQRqf83CWojcOkklUWq4CjyxaeLf5i9gv1fRoBo4QhiA8I6NCSppO8GnoV/6Ox6TNoh9BiifqGKC9VGYuC89RvUajRBTZSK2TK4DPfaT+2R+slPsFrwiT/oPEhhEK1S5Q== rsa-key-20160227\",
                 \"user_data\" : \"SWYgeW91IGNhbiBzZWUgdGhpcywgdGhlbiBpdCB3b3JrZWQgbWF5YmUuCg==\"
              }
         **Getting Metadata on the Instance**

         To get information about your instance, connect to the instance using SSH and issue any of the
         following GET requests:

             curl http://169.254.169.254/opc/v1/instance/
             curl http://169.254.169.254/opc/v1/instance/metadata/
             curl http://169.254.169.254/opc/v1/instance/metadata/<any-key-name>

         You'll get back a response that includes all the instance information; only the metadata information; or
         the metadata information for the specified key name, respectively.
    region:
      data_type: String
      desc: |-
        The region that contains the availability domain the instance is running in.

        For the us-phoenix-1 and us-ashburn-1 regions, `phx` and `iad` are returned, respectively.
        For all other regions, the full region name is returned.

        Examples: `phx`, `eu-frankfurt-1`
    shape:
      data_type: String
      desc: |-
        The shape of an instance. The shape determines the number of CPUs, amount of memory,
        and other resources allocated to the instance.

        You can enumerate all available shapes by calling {#list_shapes list_shapes}.
    source_details:
      data_type: Oci_config::InstanceSourceDetails
      desc: |-
        Details for creating an instance.
        Use this parameter to specify whether a boot volume or an image should be used to launch a new instance.
    system_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        System tags for this resource. Each key is predefined and scoped to a namespace.
        Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the instance was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    agent_config:
      data_type: Oci_config::LaunchInstanceAgentConfigDetails
      desc: ''
    time_maintenance_reboot_due:
      data_type: Runtime
      desc: |-
        The date and time the instance is expected to be stopped / started,  in the format defined by RFC3339.
        After that time if instance hasn't been rebooted, Oracle will reboot the instance within 24 hours of the due time.
        Regardless of how the instance was stopped, the flag will be reset to empty as soon as instance reaches Stopped state.
        Example: `2018-05-25T21:10:29.600Z`
    hostname_label:
      deprecated: true
      data_type: String
      desc: |-
        Deprecated. Instead use `hostnameLabel` in
        {CreateVnicDetails}.
        If you provide both, the values must match.
    subnet_id:
      deprecated: true
      reference_type: subnet
      data_type: String
      desc: |-
        Deprecated. Instead use `subnetId` in
        {CreateVnicDetails}.
        At least one of them is required; if you provide both, the values must match.
    is_pv_encryption_in_transit_enabled:
      data_type: Boolean
      desc: Whether to enable in-transit encryption for the data volume's paravirtualized
        attachment. The default value is false.
  desc: |-
    A compute host. The image used to launch the instance determines its operating system and other
    software. The shape specified during the launch process determines the number of CPUs and memory
    allocated to the instance. For more information, see
    [Overview of the Compute Service](https://docs.cloud.oracle.com/Content/Compute/Concepts/computeoverview.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_instance_console_connection:
  klass: OCI::Core::Models::InstanceConsoleConnection
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment to contain the console connection.
    connection_string:
      data_type: String
      desc: The SSH connection string for the console connection.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    fingerprint:
      data_type: String
      desc: The SSH public key fingerprint for the console connection.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The OCID of the console connection.
    instance_id:
      reference_type: instance
      data_type: String
      desc: The OCID of the instance to create the console connection to.
    lifecycle_state:
      data_type: String
      desc: The current state of the console connection.
    vnc_connection_string:
      data_type: String
      desc: |-
        The SSH connection string for the SSH tunnel used to
        connect to the console connection over VNC.
    public_key:
      data_type: String
      desc: The SSH public key used to authenticate the console connection.
  desc: |-
    The `InstanceConsoleConnection` API provides you with console access to Compute instances,
    enabling you to troubleshoot malfunctioning instances remotely.

    For more information about console access, see
    [Accessing the Console](https://docs.cloud.oracle.com/Content/Compute/References/serialconsole.htm).
oci_core_boot_volume:
  klass: OCI::Core::Models::BootVolume
  properties:
    availability_domain:
      data_type: String
      desc: |-
        The availability domain of the boot volume.

        Example: `Uocm:PHX-AD-1`
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment that contains the boot volume.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    system_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        System tags for this resource. Each key is predefined and scoped to a namespace.
        Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The boot volume's Oracle ID (OCID).
    image_id:
      reference_type: image
      data_type: String
      desc: The image OCID used to create the boot volume.
    is_hydrated:
      data_type: Boolean
      desc: Specifies whether the boot volume's data has finished copying from the
        source boot volume or boot volume backup.
    lifecycle_state:
      data_type: String
      desc: The current state of a boot volume.
    size_in_gbs:
      data_type: Integer
      desc: The size of the volume in GBs.
    size_in_mbs:
      deprecated: true
      data_type: Integer
      desc: |-
        The size of the volume in MBs. The value must be a multiple of 1024.
        This field is deprecated. Please use sizeInGBs.
    source_details:
      data_type: Oci_config::BootVolumeSourceDetails
      desc: |-
        Specifies the boot volume source details for a new boot volume. The volume source is either another boot volume in the same availability domain or a boot volume backup.
        This is a mandatory field for a boot volume.
    time_created:
      data_type: Runtime
      desc: The date and time the boot volume was created. Format defined by RFC3339.
    volume_group_id:
      reference_type: volumegroup
      data_type: String
      desc: The OCID of the source volume group.
    kms_key_id:
      reference_type: key
      data_type: String
      desc: |-
        The OCID of the Key Management key to assign as the master encryption key
        for the boot volume.
    backup_policy_id:
      reference_type: volumebackuppolicy
      data_type: String
      desc: |-
        If provided, specifies the ID of the boot volume backup policy to assign to the newly
        created boot volume. If omitted, no policy will be assigned.
    vpus_per_gb:
      data_type: Integer
      desc: |-
        The number of volume performance units (VPUs) that will be applied to this volume per GB,
        representing the Block Volume service's elastic performance options.
        See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.

        Allowed values:

          * `10`: Represents Balanced option.

          * `20`: Represents Higher Performance option.
  desc: |-
    A detachable boot volume device that contains the image used to boot a Compute instance. For more information, see
    [Overview of Boot Volumes](https://docs.cloud.oracle.com/Content/Block/Concepts/bootvolumes.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_boot_volume_backup:
  klass: OCI::Core::Models::BootVolumeBackup
  properties:
    boot_volume_id:
      reference_type: volume
      data_type: String
      desc: The OCID of the boot volume that needs to be backed up.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment that contains the boot volume backup.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    system_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        System tags for this resource. Each key is predefined and scoped to a namespace.
        Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name for the boot volume backup. Does not have to be unique and it's changeable.
        Avoid entering confidential information.
    expiration_time:
      data_type: Runtime
      desc: |-
        The date and time the volume backup will expire and be automatically deleted.
        Format defined by RFC3339. This parameter will always be present for backups that
        were created automatically by a scheduled-backup policy. For manually created backups,
        it will be absent, signifying that there is no expiration time and the backup will
        last forever until manually deleted.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The OCID of the boot volume backup.
    image_id:
      reference_type: image
      data_type: String
      desc: The image OCID used to create the boot volume the backup is taken from.
    kms_key_id:
      reference_type: key
      data_type: String
      desc: |-
        The OCID of the KMS key which is the master encryption key for the boot volume backup.
        For more information about the Key Management service and encryption keys, see
        [Overview of Key Management](https://docs.cloud.oracle.com/Content/KeyManagement/Concepts/keyoverview.htm) and
        [Using Keys](https://docs.cloud.oracle.com/Content/KeyManagement/Tasks/usingkeys.htm).
    lifecycle_state:
      data_type: String
      desc: The current state of a boot volume backup.
    size_in_gbs:
      data_type: Integer
      desc: The size of the boot volume, in GBs.
    source_type:
      data_type: String
      desc: Specifies whether the backup was created manually, or via scheduled backup
        policy.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the boot volume backup was created. This is the time the actual point-in-time image
        of the volume data was taken. Format defined by RFC3339.
    time_request_received:
      data_type: Runtime
      desc: The date and time the request to create the boot volume backup was received.
        Format defined by RFC3339.
    type:
      data_type: String
      desc: The type of backup to create. If omitted, defaults to incremental.
    unique_size_in_gbs:
      data_type: Integer
      desc: |-
        The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space
        consumed on the boot volume and whether the backup is full or incremental.
    source_boot_volume_backup_id:
      reference_type: volumebackup
      data_type: String
      desc: The OCID of the source boot volume backup.
  desc: |-
    A point-in-time copy of a boot volume that can then be used to create
    a new boot volume or recover a boot volume. For more information, see [Overview
    of Boot Volume Backups](https://docs.cloud.oracle.com/Content/Block/Concepts/bootvolumebackups.htm)
    To use any of the API operations, you must be authorized in an IAM policy.
    If you're not authorized, talk to an administrator. If you're an administrator
    who needs to write policies to give users access, see [Getting Started with
    Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_volume:
  example: |-
    Here is an example on how to use this:

        oci_core_volume { 'tenant (root)/my_volume':
            ensure              => 'present',
            availability_domain => 'arMl:EU-FRANKFURT-1-AD-1',
            size_in_gbs         => 50,
          }
  klass: OCI::Core::Models::Volume
  properties:
    availability_domain:
      data_type: String
      desc: |-
        The availability domain of the volume.

        Example: `Uocm:PHX-AD-1`
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment that contains the volume.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    system_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        System tags for this resource. Each key is predefined and scoped to a namespace.
        Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
    id:
      data_type: String
      desc: The OCID of the volume.
    is_hydrated:
      data_type: Boolean
      desc: Specifies whether the cloned volume's data has finished copying from the
        source volume or backup.
    kms_key_id:
      reference_type: key
      data_type: String
      desc: |-
        The OCID of the Key Management key to assign as the master encryption key
        for the volume.
    lifecycle_state:
      data_type: String
      desc: The current state of a volume.
    size_in_gbs:
      data_type: Integer
      desc: The size of the volume in GBs.
    size_in_mbs:
      data_type: Integer
      desc: |-
        The size of the volume in MBs. The value must be a multiple of 1024.
        This field is deprecated. Use sizeInGBs instead.
    source_details:
      data_type: Oci_config::VolumeSourceDetails
      desc: |-
        Specifies the volume source details for a new Block volume. The volume source is either another Block volume in the same availability domain or a Block volume backup.
        This is an optional field. If not specified or set to null, the new Block volume will be empty.
        When specified, the new Block volume will contain data from the source volume or backup.
    time_created:
      data_type: Runtime
      desc: The date and time the volume was created. Format defined by RFC3339.
    volume_group_id:
      reference_type: volumegroup
      data_type: String
      desc: The OCID of the source volume group.
    backup_policy_id:
      reference_type: volumebackuppolicy
      data_type: String
      desc: |-
        If provided, specifies the ID of the volume backup policy to assign to the newly
        created volume. If omitted, no policy will be assigned.
    volume_backup_id:
      deprecated: true
      reference_type: volumebackup
      data_type: String
      desc: |-
        The OCID of the volume backup from which the data should be restored on the newly created volume.
        This field is deprecated. Use the sourceDetails field instead to specify the
        backup for the volume.
    vpus_per_gb:
      data_type: Integer
      desc: |-
        The number of volume performance units (VPUs) that will be applied to this volume per GB,
        representing the Block Volume service's elastic performance options.
        See [Block Volume Elastic Performance](https://docs.cloud.oracle.com/Content/Block/Concepts/blockvolumeelasticperformance.htm) for more information.

        Allowed values:

          * `0`: Represents Lower Cost option.

          * `10`: Represents Balanced option.

          * `20`: Represents Higher Performance option.
  desc: |-
    A detachable block volume device that allows you to dynamically expand
    the storage capacity of an instance. For more information, see
    [Overview of Cloud Volume Storage](https://docs.cloud.oracle.com/Content/Block/Concepts/overview.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_volume_backup:
  example: |-
    Here is an example on how to use this:

        oci_core_volume_backup { 'tenant (root)/my_backup':
            ensure              => 'present',
            volume              => 'my_compartment/my_volume',
          }
  klass: OCI::Core::Models::VolumeBackup
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment that contains the volume backup.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    system_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        System tags for this resource. Each key is predefined and scoped to a namespace.
        Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name for the volume backup. Does not have to be unique and it's changeable.
        Avoid entering confidential information.
    expiration_time:
      data_type: Runtime
      desc: |-
        The date and time the volume backup will expire and be automatically deleted.
        Format defined by RFC3339. This parameter will always be present for backups that
        were created automatically by a scheduled-backup policy. For manually created backups,
        it will be absent, signifying that there is no expiration time and the backup will
        last forever until manually deleted.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The OCID of the volume backup.
    kms_key_id:
      reference_type: key
      data_type: String
      desc: |-
        The OCID of the KMS key which is the master encryption key for the volume backup.
        For more information about the Key Management service and encryption keys, see
        [Overview of Key Management](https://docs.cloud.oracle.com/Content/KeyManagement/Concepts/keyoverview.htm) and
        [Using Keys](https://docs.cloud.oracle.com/Content/KeyManagement/Tasks/usingkeys.htm).
    lifecycle_state:
      data_type: String
      desc: The current state of a volume backup.
    size_in_gbs:
      data_type: Integer
      desc: The size of the volume, in GBs.
    size_in_mbs:
      data_type: Integer
      desc: |-
        The size of the volume in MBs. The value must be a multiple of 1024.
        This field is deprecated. Please use sizeInGBs.
    source_type:
      data_type: String
      desc: Specifies whether the backup was created manually, or via scheduled backup
        policy.
    source_volume_backup_id:
      reference_type: volumebackup
      data_type: String
      desc: The OCID of the source volume backup.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the volume backup was created. This is the time the actual point-in-time image
        of the volume data was taken. Format defined by RFC3339.
    time_request_received:
      data_type: Runtime
      desc: The date and time the request to create the volume backup was received.
        Format defined by RFC3339.
    type:
      data_type: String
      desc: The type of backup to create. If omitted, defaults to INCREMENTAL.
    unique_size_in_gbs:
      data_type: Integer
      desc: |-
        The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space
        consumed on the volume and whether the backup is full or incremental.
    unique_size_in_mbs:
      data_type: Integer
      desc: |-
        The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space
        consumed on the volume and whether the backup is full or incremental.
        This field is deprecated. Please use uniqueSizeInGBs.
    volume_id:
      reference_type: volume
      data_type: String
      desc: The OCID of the volume that needs to be backed up.
  desc: |-
    A point-in-time copy of a volume that can then be used to create a new block volume
    or recover a block volume. For more information, see
    [Overview of Cloud Volume Storage](https://docs.cloud.oracle.com/Content/Block/Concepts/overview.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_volume_backup_policy:
  example: |-
    Here is an example on how to use this:

        oci_core_volume_backup_policy { 'tenant (root)/my_backup_policy':
            ensure              => 'present',
            schedules    => [
              {
                'backup_type' => 'INCREMENTAL',
                'offset_seconds' => 0,
                'period' => 'ONE_WEEK',
                'retention_seconds' => 2419200
              },
              {
                'backup_type' => 'INCREMENTAL',
                'offset_seconds' => 0,
                'period' => 'ONE_MONTH',
                'retention_seconds' => 31557600
              },
              {
                'backup_type' => 'FULL',
                'offset_seconds' => 0,
                'period' => 'ONE_YEAR',
                'retention_seconds' => 157680000
              }],
          }
  klass: OCI::Core::Models::VolumeBackupPolicy
  properties:
    display_name:
      data_type: String
      desc: |-
        A user-friendly name for the volume backup policy. Does not have to be unique and it's changeable.
        Avoid entering confidential information.
    id:
      data_type: String
      desc: The OCID of the volume backup policy.
    schedules:
      data_type: Array[Oci_config::VolumeBackupSchedule]
      desc: |-
        The collection of schedules for the volume backup policy. See
        see [Schedules](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm#schedules) in
        [Policy-Based Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm) for more information.
    time_created:
      data_type: Runtime
      desc: The date and time the volume backup policy was created. Format defined
        by RFC3339.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
  desc: |-
    A policy for automatically creating volume backups according to a
    recurring schedule. Has a set of one or more schedules that control when and
    how backups are created.

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_volume_group:
  example: |-
    Here is an example on how to use this:

        oci_core_volume_group { 'tenant (root)/my_volume_group':
          ensure              => 'present',
          availability_domain => 'arMl:EU-FRANKFURT-1-AD-1',
          volumes             => ['my_compartment/my_volume_1'],
        }
  includes:
  - before_create
  klass: OCI::Core::Models::VolumeGroup
  properties:
    availability_domain:
      data_type: String
      desc: The availability domain of the volume group.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment that contains the volume group.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name for the volume group. Does not have to be unique,
        and it's changeable. Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The OCID for the volume group.
    lifecycle_state:
      data_type: String
      desc: The current state of a volume group.
    size_in_mbs:
      data_type: Integer
      desc: The aggregate size of the volume group in MBs.
    size_in_gbs:
      data_type: Integer
      desc: The aggregate size of the volume group in GBs.
    time_created:
      data_type: Runtime
      desc: The date and time the volume group was created. Format defined by RFC3339.
    volume_ids:
      reference_type: volume
      data_type: Array[String]
      desc: OCIDs for the volumes in this volume group.
    is_hydrated:
      data_type: Boolean
      desc: Specifies whether the newly created cloned volume group's data has finished
        copying from the source volume group or backup.
  desc: |-
    Specifies a volume group which is a collection of
    volumes. For more information, see [Volume Groups](https://docs.cloud.oracle.com/Content/Block/Concepts/volumegroups.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_volume_group_backup:
  klass: OCI::Core::Models::VolumeGroupBackup
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment that will contain the volume group backup.
        This parameter is optional, by default backup will be created in the same
        compartment and source volume group.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name for the volume group backup. Does not have
        to be unique and it's changeable. Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The OCID of the volume group backup.
    lifecycle_state:
      data_type: String
      desc: The current state of a volume group backup.
    size_in_mbs:
      data_type: Integer
      desc: The aggregate size of the volume group backup, in MBs.
    size_in_gbs:
      data_type: Integer
      desc: The aggregate size of the volume group backup, in GBs.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the volume group backup was created. This is the time the actual point-in-time image
        of the volume group data was taken. Format defined by RFC3339.
    time_request_received:
      data_type: Runtime
      desc: The date and time the request to create the volume group backup was received.
        Format defined by RFC3339.
    type:
      data_type: String
      desc: The type of backup to create. If omitted, defaults to incremental.
    unique_size_in_mbs:
      data_type: Integer
      desc: |-
        The aggregate size used by the volume group backup, in MBs.
        It is typically smaller than sizeInMBs, depending on the space
        consumed on the volume group and whether the volume backup is full or incremental.
    unique_size_in_gbs:
      data_type: Integer
      desc: |-
        The aggregate size used by the volume group backup, in GBs.
        It is typically smaller than sizeInGBs, depending on the space
        consumed on the volume group and whether the volume backup is full or incremental.
    volume_backup_ids:
      reference_type: volumebackup
      data_type: Array[String]
      desc: OCIDs for the volume backups in this volume group backup.
    volume_group_id:
      reference_type: volumegroup
      data_type: String
      desc: The OCID of the volume group that needs to be backed up.
  desc: |-
    A point-in-time copy of a volume group that can then be used to create a new volume group
    or restore a volume group. For more information, see [Volume Groups](https://docs.cloud.oracle.com/Content/Block/Concepts/volumegroups.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_identity_dynamic_group:
  example: |-
    Here is an example on how to use this:

        oci_identity_dynamic_group { 'tenant (root)/my_dynamic_group':
            ensure        => 'present',
            description   => 'description',
            matching_rule => "any {ANY {instance.id = 'ocid1.instance.region1.sea.abzwkljrobrgevdin34ftbzurf6vqutavtfqadaa2xlj3e66qwudvljkffxa'}}",
          }
  klass: OCI::Identity::Models::DynamicGroup
  properties:
    id:
      data_type: String
      desc: The OCID of the group.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the tenancy containing the group.
    name:
      data_type: String
      desc: |-
        The name you assign to the group during creation. The name must be unique across all groups
        in the tenancy and cannot be changed.
    description:
      data_type: String
      desc: The description you assign to the group during creation. Does not have
        to be unique, and it's changeable.
    matching_rule:
      data_type: String
      desc: |-
        The matching rule to dynamically match an instance certificate to this dynamic group.
        For rule syntax, see [Managing Dynamic Groups](https://docs.cloud.oracle.com/Content/Identity/Tasks/managingdynamicgroups.htm).
    time_created:
      data_type: Runtime
      desc: |-
        Date and time the group was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    lifecycle_state:
      data_type: String
      desc: |-
        The group's current state. After creating a group, make sure its `lifecycleState` changes from CREATING to
        ACTIVE before using it.
    inactive_status:
      data_type: Integer
      desc: The detailed status of INACTIVE lifecycleState.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
  desc: |-
    A dynamic group defines a matching rule. Every bare metal or virtual machine instance is deployed with an instance certificate.
    The certificate contains metadata about the instance. This includes the instance OCID and the compartment OCID, along
    with a few other optional properties. When an API call is made using this instance certificate as the authenticator,
    the certificate can be matched to one or multiple dynamic groups. The instance can then get access to the API
    based on the permissions granted in policies written for the dynamic groups.

    This works like regular user/group membership. But in that case, the membership is a static relationship, whereas
    in a dynamic group, the membership of an instance certificate to a dynamic group is determined during runtime.
    For more information, see [Managing Dynamic Groups](https://docs.cloud.oracle.com/Content/Identity/Tasks/managingdynamicgroups.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using
    the API.
oci_identity_group:
  example: |-
    Here is an example on how to use this:

        oci_identity_group { 'tenant (root)/my_group':
          ensure => 'present',
          users  => ['my_user_1','my_user_2']
        }
  klass: OCI::Identity::Models::Group
  properties:
    users:
      custom: true
    id:
      data_type: String
      desc: The OCID of the group.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the tenancy containing the group.
    name:
      data_type: String
      desc: |-
        The name you assign to the group during creation. The name must be unique across all groups
        in the tenancy and cannot be changed.
    description:
      data_type: String
      desc: The description you assign to the group during creation. Does not have
        to be unique, and it's changeable.
    time_created:
      data_type: Runtime
      desc: |-
        Date and time the group was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    lifecycle_state:
      data_type: String
      desc: |-
        The group's current state. After creating a group, make sure its `lifecycleState` changes from CREATING to
        ACTIVE before using it.
    inactive_status:
      data_type: Integer
      desc: The detailed status of INACTIVE lifecycleState.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
  desc: |-
    A collection of users who all need the same type of access to a particular set of resources or compartment.
    For conceptual information about groups and other IAM Service components, see
    [Overview of the IAM Service](https://docs.cloud.oracle.com/Content/Identity/Concepts/overview.htm).

    If you're federating with an identity provider (IdP), you need to create mappings between the groups
    defined in the IdP and groups you define in the IAM service. For more information, see
    [Identity Providers and Federation](https://docs.cloud.oracle.com/Content/Identity/Concepts/federation.htm). Also see
    {IdentityProvider} and
    {IdpGroupMapping}.

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access,
    see [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values
    using the API.
oci_identity_identity_provider:
  example: |-
    Here is an example on how to use this:

        oci_identity_provider { 'tenant (root)/my_provider':
          ensure          => 'present',
          description     => 'my own provider',
        }
  klass: OCI::Identity::Models::IdentityProvider
  properties:
    id:
      data_type: String
      desc: The OCID of the `IdentityProvider`.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of your tenancy.
    name:
      data_type: String
      desc: |-
        The name you assign to the `IdentityProvider` during creation.
        The name must be unique across all `IdentityProvider` objects in the
        tenancy and cannot be changed.
    description:
      data_type: String
      desc: |-
        The description you assign to the `IdentityProvider` during creation.
        Does not have to be unique, and it's changeable.
    product_type:
      data_type: String
      desc: |-
        The identity provider service or product.
        Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft
        Active Directory Federation Services (ADFS).

        Example: `IDCS`
    time_created:
      data_type: Runtime
      desc: |-
        Date and time the `IdentityProvider` was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    lifecycle_state:
      data_type: String
      desc: |-
        The current state. After creating an `IdentityProvider`, make sure its
        `lifecycleState` changes from CREATING to ACTIVE before using it.
    inactive_status:
      data_type: Integer
      desc: The detailed status of INACTIVE lifecycleState.
    protocol:
      data_type: String
      desc: |-
        The protocol used for federation.

        Example: `SAML2`
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
  desc: |-
    The resulting base object when you add an identity provider to your tenancy. A
    {Saml2IdentityProvider}
    is a specific type of `IdentityProvider` that supports the SAML 2.0 protocol. Each
    `IdentityProvider` object has its own OCID. For more information, see
    [Identity Providers and Federation](https://docs.cloud.oracle.com/Content/Identity/Concepts/federation.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access,
    see [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you supply string
    values using the API.

    This class has direct subclasses. If you are using this class as input to a service operations then you should favor using a subclass over the base class
oci_identity_policy:
  example: |-
    Here is an example on how to use this:

        oci_identity_policy { 'tenant (root)/my_policy}':
            ensure        => 'present',
            description   => 'My own policy',
            statements    => ['Allow group Administrators to manage all-resources in compartment my_compartment'],
          }
  klass: OCI::Identity::Models::Policy
  properties:
    id:
      data_type: String
      desc: The OCID of the policy.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment containing the policy (either the tenancy
        or another compartment).
    name:
      data_type: String
      desc: |-
        The name you assign to the policy during creation. The name must be unique across all policies
        in the tenancy and cannot be changed.
    statements:
      data_type: Array[String]
      desc: |-
        An array of policy statements written in the policy language. See
        [How Policies Work](https://docs.cloud.oracle.com/Content/Identity/Concepts/policies.htm) and
        [Common Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/commonpolicies.htm).
    description:
      data_type: String
      desc: The description you assign to the policy during creation. Does not have
        to be unique, and it's changeable.
    time_created:
      data_type: Runtime
      desc: |-
        Date and time the policy was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    lifecycle_state:
      data_type: String
      desc: |-
        The policy's current state. After creating a policy, make sure its `lifecycleState` changes from CREATING to
        ACTIVE before using it.
    inactive_status:
      data_type: Integer
      desc: The detailed status of INACTIVE lifecycleState.
    version_date:
      data_type: Runtime
      desc: |-
        The version of the policy. If null or set to an empty string, when a request comes in for authorization, the
        policy will be evaluated according to the current behavior of the services at that moment. If set to a particular
        date (YYYY-MM-DD), the policy will be evaluated according to the behavior of the services on that date.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
  desc: |-
    A document that specifies the type of access a group has to the resources in a compartment. For information about
    policies and other IAM Service components, see
    [Overview of the IAM Service](https://docs.cloud.oracle.com/Content/Identity/Concepts/overview.htm). If you're new to policies, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    The word \"policy\" is used by people in different ways:

      * An individual statement written in the policy language
      * A collection of statements in a single, named \"policy\" document (which has an Oracle Cloud ID (OCID) assigned to it)
      * The overall body of policies your organization uses to control access to resources

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator.

    **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values
    using the API.
oci_identity_tag_namespace:
  example: |-
    Here is an example on how to use this:

          oci_identity_tag_namespace { 'tenant (root)/my_namespace':
              ensure              => 'present',
              description         => 'my namespace',
            }
  klass: OCI::Identity::Models::TagNamespace
  properties:
    id:
      data_type: String
      desc: The OCID of the tag namespace.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the tenancy containing the tag namespace.
    name:
      data_type: String
      desc: The name you assign to the tag namespace during creation. It must be unique
        across all tag namespaces in the tenancy and cannot be changed.
    description:
      data_type: String
      desc: The description you assign to the tag namespace during creation.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    is_retired:
      data_type: Boolean
      desc: |-
        Whether the tag namespace is retired.
        See [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).
    lifecycle_state:
      data_type: String
      desc: The tagnamespace's current state. After creating a tagnamespace, make
        sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace,
        make sure its `lifecycleState` is INACTIVE before using it.
    time_created:
      data_type: Runtime
      desc: |-
        Date and time the tagNamespace was created, in the format defined by RFC3339.
        Example: `2016-08-25T21:10:29.600Z`
  desc: |-
    A managed container for defined tags. A tag namespace is unique in a tenancy. For more information,
    see [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/Content/Identity/Concepts/taggingoverview.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values
    using the API.
oci_identity_user:
  example: |-
    Here is an example on how to use this:

        oci_identity_user { 'tenant (root)/my_user':
          ensure          => 'present',
          description     => 'my user',
        }
  klass: OCI::Identity::Models::User
  includes:
  - before_destroy
  properties:
    id:
      data_type: String
      desc: The OCID of the user.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the tenancy containing the user.
    name:
      data_type: String
      desc: |-
        The name you assign to the user during creation. This is the user's login for the Console.
        The name must be unique across all users in the tenancy and cannot be changed.
    description:
      data_type: String
      desc: The description you assign to the user during creation. Does not have
        to be unique, and it's changeable.
    email:
      data_type: String
      desc: The email you assign to the user. Has to be unique across the tenancy.
    identity_provider_id:
      reference_type: saml2idp
      data_type: String
      desc: The OCID of the `IdentityProvider` this user belongs to.
    external_identifier:
      data_type: String
      desc: Identifier of the user in the identity provider
    time_created:
      data_type: Runtime
      desc: |-
        Date and time the user was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    lifecycle_state:
      data_type: String
      desc: |-
        The user's current state. After creating a user, make sure its `lifecycleState` changes from CREATING to
        ACTIVE before using it.
    inactive_status:
      data_type: Integer
      desc: |-
        Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user
        is inactive:

        - bit 0: SUSPENDED (reserved for future use)
        - bit 1: DISABLED (reserved for future use)
        - bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    capabilities:
      data_type: Oci_config::UserCapabilities
      desc: Properties indicating how the user is allowed to authenticate.
    is_mfa_activated:
      data_type: Boolean
      desc: Flag indicates if MFA has been activated for the user.
  desc: |-
    An individual employee or system that needs to manage or use your company's Oracle Cloud Infrastructure
    resources. Users might need to launch instances, manage remote disks, work with your cloud network, etc. Users
    have one or more IAM Service credentials ({ApiKey},
    {UIPassword}, {SwiftPassword} and
    {AuthToken}).
    For more information, see [User Credentials](https://docs.cloud.oracle.com/Content/API/Concepts/usercredentials.htm)). End users of your
    application are not typically IAM Service users. For conceptual information about users and other IAM Service
    components, see [Overview of the IAM Service](https://docs.cloud.oracle.com/Content/Identity/Concepts/overview.htm).

    These users are created directly within the Oracle Cloud Infrastructure system, via the IAM service.
    They are different from *federated users*, who authenticate themselves to the Oracle Cloud Infrastructure
    Console via an identity provider. For more information, see
    [Identity Providers and Federation](https://docs.cloud.oracle.com/Content/Identity/Concepts/federation.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access,
    see [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values
    using the API.
oci_identity_compartment:
  example: |-
    Here is an example on how to use this:

        oci_identity_compartment { 'tenant (root)/my_compartment':
          ensure          => 'present',
          description     => 'my own compartment',
        }
  klass: OCI::Identity::Models::Compartment
  properties:
    id:
      data_type: String
      desc: The OCID of the compartment.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the parent compartment containing the compartment.
    name:
      data_type: String
      desc: |-
        The name you assign to the compartment during creation. The name must be unique across all compartments
        in the parent compartment. Avoid entering confidential information.
    description:
      data_type: String
      desc: The description you assign to the compartment during creation. Does not
        have to be unique, and it's changeable.
    time_created:
      data_type: Runtime
      desc: |-
        Date and time the compartment was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    lifecycle_state:
      data_type: String
      desc: |-
        The compartment's current state. After creating a compartment, make sure its `lifecycleState` changes from
        CREATING to ACTIVE before using it.
    inactive_status:
      data_type: Integer
      desc: The detailed status of INACTIVE lifecycleState.
    is_accessible:
      data_type: Boolean
      desc: |-
        Indicates whether or not the compartment is accessible for the user making the request.
        Returns true when the user has INSPECT permissions directly on a resource in the
        compartment or indirectly (permissions can be on a resource in a subcompartment).
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
  desc: |-
    A collection of related resources. Compartments are a fundamental component of Oracle Cloud Infrastructure
    for organizing and isolating your cloud resources. You use them to clearly separate resources for the purposes
    of measuring usage and billing, access (through the use of IAM Service policies), and isolation (separating the
    resources for one project or business unit from another). A common approach is to create a compartment for each
    major part of your organization. For more information, see
    [Overview of the IAM Service](https://docs.cloud.oracle.com/Content/Identity/Concepts/overview.htm) and also
    [Setting Up Your Tenancy](https://docs.cloud.oracle.com/Content/GSG/Concepts/settinguptenancy.htm).

    To place a resource in a compartment, simply specify the compartment ID in the \"Create\" request object when
    initially creating the resource. For example, to launch an instance into a particular compartment, specify
    that compartment's OCID in the `LaunchInstance` request. You can't move an existing resource from one
    compartment to another.

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access,
    see [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values
    using the API.
oci_core_ip_sec_connection:
  example: |-
    Here is an example on how to use this:

        oci_core_ip_sec_connection { 'tenant (root)/my_ip_sec_connection':
          ensure        => 'present',
          drg           => 'my_compartment/my_drg',
          cpe           => 'my_compartment/my_cpe',
          static_routes => ['10.0.0.0/16'],
          oci_timeout   => 1200, # This can take a long time, so we need a longer timeout
        }
  klass: OCI::Core::Models::IPSecConnection
  properties:
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The OCID of the compartment to contain the IPSec connection.
    cpe_id:
      data_type: String
      reference_type: cpe
      desc: The OCID of the {Cpe} object.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    drg_id:
      reference_type: drg
      data_type: String
      desc: The OCID of the DRG.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The IPSec connection's Oracle ID (OCID).
    lifecycle_state:
      data_type: String
      desc: The IPSec connection's current state.
    cpe_local_identifier:
      data_type: String
      desc: |-
        Your identifier for your CPE device. Can be either an IP address or a hostname (specifically, the
        fully qualified domain name (FQDN)). The type of identifier you provide here must correspond
        to the value for `cpeLocalIdentifierType`.

        If you don't provide a value, the `ipAddress` attribute for the {Cpe}
        object specified by `cpeId` is used as the `cpeLocalIdentifier`.

        For information about why you'd provide this value, see
        [If Your CPE Is Behind a NAT Device](https://docs.cloud.oracle.com/Content/Network/Tasks/overviewIPsec.htm#nat).

        Example IP address: `10.0.3.3`

        Example hostname: `cpe.example.com`
    cpe_local_identifier_type:
      data_type: String
      desc: |-
        The type of identifier for your CPE device. The value you provide here must correspond to the value
        for `cpeLocalIdentifier`.
    static_routes:
      data_type: Array[String]
      desc: |-
        Static routes to the CPE. A static route's CIDR must not be a
        multicast address or class E address.

        Used for routing a given IPSec tunnel's traffic only if the tunnel
        is using static routing. If you configure at least one tunnel to use static routing, then
        you must provide at least one valid static route. If you configure both
        tunnels to use BGP dynamic routing, you can provide an empty list for the static routes.
        For more information, see the important note in {IPSecConnection}.

        The CIDR can be either IPv4 or IPv6. Note that IPv6 addressing is currently supported only
        in certain regions. See [IPv6 Addresses](https://docs.cloud.oracle.com/Content/Network/Concepts/ipv6.htm).

        Example: `10.0.1.0/24`

        Example: `2001:db8::/32`
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the IPSec connection was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    tunnel_configuration:
      data_type: Array[Oci_config::CreateIPSecConnectionTunnelDetails]
      desc: |-
        Information for creating the individual tunnels in the IPSec connection. You can provide a
        maximum of 2 `tunnelConfiguration` objects in the array (one for each of the
        two tunnels).
  desc: |-
    A connection between a DRG and CPE. This connection consists of multiple IPSec
    tunnels. Creating this connection is one of the steps required when setting up
    an IPSec VPN.

    **Important:**  Each tunnel in an IPSec connection can use either static routing or BGP dynamic
    routing (see the {IPSecConnectionTunnel} object's
    `routing` attribute). Originally only static routing was supported and
    every IPSec connection was required to have at least one static route configured.
    To maintain backward compatibility in the API when support for BPG dynamic routing was introduced,
    the API accepts an empty list of static routes if you configure both of the IPSec tunnels to use
    BGP dynamic routing. If you switch a tunnel's routing from `BGP` to `STATIC`, you must first
    ensure that the IPSec connection is configured with at least one valid CIDR block static route.
    Oracle uses the IPSec connection's static routes when routing a tunnel's traffic *only*
    if that tunnel's `routing` attribute = `STATIC`. Otherwise the static routes are ignored.

    For more information about the workflow for setting up an IPSec connection, see
    [IPSec VPN](https://docs.cloud.oracle.com/Content/Network/Tasks/managingIPsec.htm).

    To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
    talk to an administrator. If you're an administrator who needs to write policies to give users access, see
    [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_database_autonomous_database:
  klass: OCI::Database::Models::AutonomousDatabase
  properties:
    id:
      data_type: String
      desc: The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)
        of the Autonomous Database.
    compartment_id:
      reference_type: compartment
      data_type: String
      desc: The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)
        of the compartment.
    lifecycle_state:
      data_type: String
      desc: The current state of the database.
    lifecycle_details:
      data_type: String[1]
      desc: Information about the current lifecycle state.
    db_name:
      data_type: String
      desc: The database name.
    is_free_tier:
      data_type: Boolean
      desc: Indicates if this is an Always Free resource. The default value is false.
        Note that Always Free Autonomous Databases have 1 CPU and 20GB memory. For
        Always Free databases, memory and CPU cannot be scaled.
    system_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        System tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
    time_reclamation_of_free_autonomous_database:
      data_type: Runtime
      desc: The date and time the Always Free database will be stopped because of
        inactivity. If this time is reached without any database activity, the database
        will automatically be put into the STOPPED state.
    time_deletion_of_free_autonomous_database:
      data_type: Runtime
      desc: The date and time the Always Free database will be automatically deleted
        because of inactivity. If the database is in the STOPPED state and without
        activity until this time, it will be deleted.
    cpu_core_count:
      data_type: Integer
      desc: The number of CPU cores to be made available to the database.
    data_storage_size_in_tbs:
      data_type: Integer
      desc: The quantity of data in the database, in terabytes.
    is_dedicated:
      data_type: Boolean
      desc: True if the database uses the [dedicated deployment](https://docs.cloud.oracle.com/Content/Database/Concepts/adbddoverview.htm)
        option.
    autonomous_container_database_id:
      reference_type: autonomouscontainerdatabase
      data_type: String
      desc: The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).
    time_created:
      data_type: Runtime
      desc: The date and time the database was created.
    display_name:
      data_type: String
      desc: The user-friendly name for the Autonomous Database. The name does not
        have to be unique.
    service_console_url:
      data_type: String
      desc: The URL of the Service Console for the Autonomous Database.
    connection_strings:
      data_type: Oci_config::AutonomousDatabaseConnectionStrings
      desc: The connection string used to connect to the Autonomous Database. The
        username for the Service Console is ADMIN. Use the password you entered when
        creating the Autonomous Database for the password value.
    connection_urls:
      data_type: Oci_config::AutonomousDatabaseConnectionUrls
      desc: ''
    license_model:
      data_type: String
      desc: The Oracle license model that applies to the Oracle Autonomous Database.
        The default for Autonomous Database using the [shared deployment] is BRING_YOUR_OWN_LICENSE.
        Note that when provisioning an Autonomous Database using the [dedicated deployment](https://docs.cloud.oracle.com/Content/Database/Concepts/adbddoverview.htm)
        option, this attribute must be null because the attribute is already set on
        Autonomous Exadata Infrastructure level.
    used_data_storage_size_in_tbs:
      data_type: Integer
      desc: The amount of storage that has been used, in terabytes.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
    db_version:
      data_type: String
      desc: A valid Oracle Database version for Autonomous Database.
    is_preview:
      data_type: Boolean
      desc: Indicates if the Autonomous Database version is a preview version.
    db_workload:
      data_type: String
      desc: The Autonomous Database workload type. OLTP indicates an Autonomous Transaction
        Processing database and DW indicates an Autonomous Data Warehouse database.
    whitelisted_ips:
      data_type: Array[String]
      desc: |-
        The client IP access control list (ACL). This feature is available for [serverless deployments](https://docs.cloud.oracle.com/Content/Database/Concepts/adboverview.htm#AEI) only.
        Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. This is an array of CIDR (Classless Inter-Domain Routing) notations for a subnet.
    is_auto_scaling_enabled:
      data_type: Boolean
      desc: Indicates if auto scaling is enabled for the Autonomous Database CPU core
        count. Note that auto scaling is available for [serverless deployments](https://docs.cloud.oracle.com/Content/Database/Concepts/adboverview.htm#AEI)
        only.
    admin_password:
      data_type: String
    is_preview_version_with_service_terms_accepted:
      data_type: Boolean
    source:
      data_type: String
    subnet_id:
      reference_type: subnet
      data_type: String
      desc: |-
        The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with.

        **Subnet Restrictions:**
        - For bare metal DB systems and for single node virtual machine DB systems, do not use a subnet that overlaps with 192.168.16.16/28.
        - For Exadata and virtual machine 2-node RAC DB systems, do not use a subnet that overlaps with 192.168.128.0/20.
        - For Autonomous Database, setting this will disable public secure access to the database.

        These subnets are used by the Oracle Clusterware private interconnect on the database instance.
        Specifying an overlapping subnet will cause the private interconnect to malfunction.
        This restriction applies to both the client subnet and the backup subnet.
    nsg_ids:
      data_type: Array[String]
      reference_type: networksecuritygroup
      desc: |-
        A list of the [OCIDs](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that this resource belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/Content/Network/Concepts/securityrules.htm).
        **NsgIds restrictions:**
        - Autonomous Databases with private access require at least 1 Network Security Group (NSG). The nsgIds array cannot be empty.
    private_endpoint:
      data_type: String
      desc: The private endpoint for the resource.
    private_endpoint_label:
      data_type: String
      desc: The private endpoint label for the resource.
    data_safe_status:
      data_type: String
      desc: Status of the Data Safe registration for this Autonomous Database.
    time_maintenance_begin:
      data_type: Runtime
      desc: The date and time when maintenance will begin.
    time_maintenance_end:
      data_type: Runtime
      desc: The date and time when maintenance will end.
  desc: An Oracle Autonomous Database.
oci_key_management_key:
  desc: An encryption key.
  example: |-
    Here is an example on how to use this:

          oci_key_management_key { 'tenant (root)/my_key}':
            ensure    => 'present',
            vault     => 'my_compartmentt/my_vault',
            key_shape =>  {
              algorithm => 'AES',
              length    => 16,
            },
          }
  includes:
  - client
  klass: OCI::KeyManagement::Models::Key
  properties:
    compartment_id:
      data_type: String
      desc: The OCID of the compartment that contains this master encryption key.
    current_key_version:
      data_type: String
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name for the key. It does not have to be unique, and it is changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
    key_shape:
      custom: true
      data_type: Oci_config::KeyShape
      desc: This attribute is required.
    lifecycle_state:
      data_type: String
    time_created:
      data_type: Runtime
    time_of_deletion:
      data_type: Runtime
    vault_id:
      reference_type: vault
      data_type: String
oci_key_management_vault:
  desc: A vault to manage keys.
  example: |-
    Here is an example on how to use this:

          oci_key_management_vault { 'tenant (root)/my_vault:
            ensure        => 'present',
            vault_type    => 'DEFAULT',
          }
  klass: OCI::KeyManagement::Models::Vault
  properties:
    compartment_id:
      data_type: String
      desc: The OCID of the compartment where you want to create this vault.
    crypto_endpoint:
      data_type: String
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name for the vault. It does not have to be unique, and it is changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
    lifecycle_state:
      data_type: String
    management_endpoint:
      data_type: String
    time_created:
      data_type: Runtime
    time_of_deletion:
      data_type: Runtime
    vault_type:
      data_type: String
      desc: The type of vault to create. Each type of vault stores the key with different
        degrees of isolation and has different options and pricing.
    wrappingkey_id:
      reference_type: key
      data_type: String
oci_core_public_ip:
  example: |-
    Here is an example on how to use this:

          oci_core_public_ip { 'tenant (root)/#my_ip_address':
            ensure   => 'present',
            lifetime => 'RESERVED',
          }
  klass: OCI::Core::Models::PublicIp
  properties:
    assigned_entity_id:
      reference_type: publicip
      data_type: String
      desc: |-
        The OCID of the entity the public IP is assigned to, or in the process of
        being assigned to.
    assigned_entity_type:
      data_type: String
      desc: |-
        The type of entity the public IP is assigned to, or in the process of being
        assigned to.
    availability_domain:
      data_type: String
      desc: |-
        The public IP's availability domain. This property is set only for ephemeral public IPs
        that are assigned to a private IP (that is, when the `scope` of the public IP is set to
        AVAILABILITY_DOMAIN). The value is the availability domain of the assigned private IP.

        Example: `Uocm:PHX-AD-1`
    compartment_id:
      data_type: String
      desc: |-
        The OCID of the compartment to contain the public IP. For ephemeral public IPs,
        you must set this to the private IP's compartment OCID.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name. Does not have to be unique, and it's changeable. Avoid
        entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The public IP's Oracle ID (OCID).
    ip_address:
      data_type: String
      desc: |-
        The public IP address of the `publicIp` object.

        Example: `129.146.2.1`
    lifecycle_state:
      data_type: String
      desc: The public IP's current state.
    lifetime:
      data_type: String
      desc: |-
        Defines when the public IP is deleted and released back to the Oracle Cloud
        Infrastructure public IP pool. For more information, see
        [Public IP Addresses](https://docs.cloud.oracle.com/Content/Network/Tasks/managingpublicIPs.htm).
    private_ip_id:
      reference_type: publicip
      data_type: String
      desc: |-
        The OCID of the private IP to assign the public IP to.

        Required for an ephemeral public IP because it must always be assigned to a private IP
        (specifically a *primary* private IP).

        Optional for a reserved public IP. If you don't provide it, the public IP is created but not
        assigned to a private IP. You can later assign the public IP with
        {#update_public_ip update_public_ip}.
    scope:
      data_type: String
      desc: |-
        Whether the public IP is regional or specific to a particular availability domain.

        * `REGION`: The public IP exists within a region and is assigned to a regional entity
        (such as a {NatGateway}), or can be assigned to a private
        IP in any availability domain in the region. Reserved public IPs and ephemeral public IPs
        assigned to a regional entity have `scope` = `REGION`.

        * `AVAILABILITY_DOMAIN`: The public IP exists within the availability domain of the entity
        it's assigned to, which is specified by the `availabilityDomain` property of the public IP object.
        Ephemeral public IPs that are assigned to private IPs have `scope` = `AVAILABILITY_DOMAIN`.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the public IP was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
  desc: |-
    A *public IP* is a conceptual term that refers to a public IP address and related properties.
    The `publicIp` object is the API representation of a public IP.

    There are two types of public IPs:
    1. Ephemeral
    2. Reserved

    For more information and comparison of the two types,
    see [Public IP Addresses](https://docs.cloud.oracle.com/Content/Network/Tasks/managingpublicIPs.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you
    supply string values using the API.
oci_core_instance_pool:
  includes:
  - on_modify
  klass: OCI::Core::Models::InstancePool
  properties:
    id:
      data_type: String
      desc: The OCID of the instance pool.
    compartment_id:
      data_type: String
      desc: The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)
        of the compartment containing the instance pool.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: |-
        A user-friendly name for the instance pool. Does not have to be unique, and it's
        changeable. Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    instance_configuration_id:
      reference_type: instanceconfiguration
      data_type: String
      desc: |-
        The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the instance configuration associated
        with the instance pool.
    lifecycle_state:
      data_type: String
      desc: The current state of the instance pool.
    placement_configurations:
      custom: true
      data_type: Array[Oci_config::CreateInstancePoolPlacementConfigurationDetails]
      desc: |-
        The placement configurations for the instance pool. Provide one placement configuration for
        each availability domain.

        To use the instance pool with a regional subnet, provide a placement configuration for
        each availability domain, and include the regional subnet in each placement
        configuration.
    size:
      data_type: Integer
      desc: The number of instances that should be in the instance pool.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the instance pool was created, in the format defined by RFC3339.
        Example: `2016-08-25T21:10:29.600Z`
    load_balancers:
      data_type: Array[Oci_config::AttachLoadBalancerDetails]
      desc: The load balancers to attach to the instance pool.
  desc: |-
    An instance pool is a group of instances within the same region that are created based off of the same
    instance configuration. For more information about instance pools and instance configurations, see
    [Managing Compute Instances](https://docs.cloud.oracle.com/Content/Compute/Concepts/instancemanagement.htm).
oci_core_instance_configuration:
  klass: OCI::Core::Models::InstanceConfiguration
  properties:
    compartment_id:
      data_type: String
      desc: |-
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment
        containing the instance configuration.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name for the instance configuration.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
        of the instance configuration.
    deferred_fields:
      data_type: Array[String]
      desc: |-
        Parameters that were not specified when the instance configuration was created, but that
        are required to launch an instance from the instance configuration. See the
        {#launch_instance_configuration launch_instance_configuration} operation.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the instance configuration was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
    source:
      data_type: String
  desc: |-
    An instance configuration is a template that defines the settings to use when creating Compute instances.
    For more information about instance configurations, see
    [Managing Compute Instances](https://docs.cloud.oracle.com/Content/Compute/Concepts/instancemanagement.htm).
oci_autoscaling_auto_scaling_configuration:
  custom: true
  klass: OCI::Autoscaling::Models::AutoScalingConfiguration
  properties:
    compartment_id:
      data_type: String
      desc: The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)
        of the compartment containing the autoscaling configuration.
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    display_name:
      data_type: String
      desc: A user-friendly name. Does not have to be unique, and it's changeable.
        Avoid entering confidential information.
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no
        predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).

        Example: `{\"Department\": \"Finance\"}`
    id:
      data_type: String
      desc: The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)
        of the autoscaling configuration.
    cool_down_in_seconds:
      data_type: Integer
      desc: |-
        The minimum period of time to wait between scaling actions. The cooldown period gives the system time to stabilize
        before rescaling. The minimum value is 300 seconds, which is also the default.
    is_enabled:
      data_type: Boolean
      desc: Whether the autoscaling configuration is enabled.
    resource:
      data_type: Oci_config::Resource
      desc: This attribute is required.
    policies:
      data_type: Array[Oci_config::CreateAutoScalingPolicyDetails]
      desc: This attribute is required.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the AutoScalingConfiguration was created, in the format defined by RFC3339.

        Example: `2016-08-25T21:10:29.600Z`
  desc: |-
    An autoscaling configuration allows you to dynamically scale the resources in a Compute instance pool.
    For more information, see [Autoscaling](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/autoscalinginstancepools.htm).
oci_object_storage_bucket:
  example: |-
    Here is an example on how to use this:

          oci_object_storage_bucket { 'tenant (root)/my_bucket':
            ensure        => 'present',
            freeform_tags => {'test' => 'no'},
          }
  klass: OCI::ObjectStorage::Models::Bucket
  properties:
    namespace:
      data_type: String
    name:
      data_type: String
      desc: |-
        The name of the bucket. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
        Bucket names must be unique within an Object Storage namespace. Avoid entering confidential information.
        example: Example: my-new-bucket1
    compartment_id:
      data_type: String
      desc: The ID of the compartment in which to create the bucket.
    metadata:
      data_type: Hash[String, String]
      desc: Arbitrary string, up to 4KB, of keys and values for user-defined metadata.
    created_by:
      data_type: String
    time_created:
      data_type: Runtime
    etag:
      data_type: String
    public_access_type:
      data_type: String
      desc: |-
        The type of public access enabled on this bucket.
        A bucket is set to `NoPublicAccess` by default, which only allows an authenticated caller to access the
        bucket and its contents. When `ObjectRead` is enabled on the bucket, public access is allowed for the
        `GetObject`, `HeadObject`, and `ListObjects` operations. When `ObjectReadWithoutList` is enabled on the bucket,
        public access is allowed for the `GetObject` and `HeadObject` operations.
    storage_tier:
      data_type: String
      desc: |-
        The type of storage tier of this bucket.
        A bucket is set to 'Standard' tier by default, which means the bucket will be put in the standard storage tier.
        When 'Archive' tier type is set explicitly, the bucket is put in the Archive Storage tier. The 'storageTier'
        property is immutable after bucket is created.
    object_events_enabled:
      data_type: Boolean
      desc: |-
        Whether or not events are emitted for object state changes in this bucket. By default, `objectEventsEnabled` is
        set to `false`. Set `objectEventsEnabled` to `true` to emit events for object state changes. For more information
        about events, see [Overview of Events](https://docs.cloud.oracle.com/Content/Events/Concepts/eventsoverview.htm).
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    kms_key_id:
      reference_type: key
      data_type: String
      desc: |-
        The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of a master encryption key used to call the Key
        Management service to generate a data encryption key or to encrypt or decrypt a data encryption key.
    object_lifecycle_policy_etag:
      data_type: String
    approximate_count:
      data_type: Integer
    approximate_size:
      data_type: Integer
    replication_enabled:
      data_type: Boolean
    is_read_only:
      data_type: Boolean
    id:
      data_type: String
oci_file_storage_file_system:
  example: |-
    Here is an example on how to use this:

        oci_file_storage_file_system { 'tenant (root)/my_file_system':
          ensure              => 'present',
          availability_domain => 'arMl:EU-FRANKFURT-1-AD-1',
        }
  klass: OCI::FileStorage::Models::FileSystem
  properties:
    availability_domain:
      data_type: String
      desc: |-
        The availability domain to create the file system in.

        Example: `Uocm:PHX-AD-1`
    metered_bytes:
      data_type: Integer
      desc: |-
        The number of bytes consumed by the file system, including
        any snapshots. This number reflects the metered size of the file
        system and is updated asynchronously with respect to
        updates to the file system.
    compartment_id:
      data_type: String
      desc: The OCID of the compartment to create the file system in.
    display_name:
      data_type: String
      desc: |-
        A user-friendly name. It does not have to be unique, and it is changeable.
        Avoid entering confidential information.

        Example: `My file system`
    id:
      data_type: String
      desc: The OCID of the file system.
    lifecycle_state:
      data_type: String
      desc: The current state of the file system.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the file system was created, expressed in
        [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.

        Example: `2016-08-25T21:10:29.600Z`
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair
         with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    kms_key_id:
      reference_type: key
      data_type: String
      desc: The OCID of KMS key used to encrypt the encryption keys associated with
        this file system.
  desc: |-
    An NFS file system. To allow access to a file system, add it
    to an export set and associate the export set with a mount
    target. The same file system can be in multiple export sets and
    associated with multiple mount targets.

    To use any of the API operations, you must be authorized in an
    IAM policy. If you're not authorized, talk to an
    administrator. If you're an administrator who needs to write
    policies to give users access, see [Getting Started with
    Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
oci_file_storage_mount_target:
  includes:
  - after_destroy
  example: |-
    Here is an example on how to use this:

        oci_file_storage_mount_target { 'tenant (root)/my_mount_target':
          ensure              => 'present',
          availability_domain => 'arMl:EU-FRANKFURT-1-AD-1',
          subnet              => 'my_sub_net',
        }
  klass: OCI::FileStorage::Models::MountTarget
  properties:
    availability_domain:
      data_type: String
      desc: |-
        The availability domain in which to create the mount target.

        Example: `Uocm:PHX-AD-1`
    compartment_id:
      data_type: String
      desc: The OCID of the compartment in which to create the mount target.
    display_name:
      data_type: String
      desc: |-
        A user-friendly name. It does not have to be unique, and it is changeable.
        Avoid entering confidential information.

        Example: `My mount target`
    export_set_id:
      skip: true
      reference_type: none
      data_type: String
      desc: |-
        The OCID of the associated export set. Controls what file
        systems will be exported through Network File System (NFS) protocol on this
        mount target.
    id:
      data_type: String
      desc: The OCID of the mount target.
    lifecycle_state:
      data_type: String
      desc: The current state of the mount target.
    private_ip_ids:
      reference_type: publicip
      data_type: Array[String]
      desc: The OCIDs of the private IP addresses associated with this mount target.
    subnet_id:
      reference_type: subnet
      data_type: String
      desc: The OCID of the subnet in which to create the mount target.
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the mount target was created, expressed
        in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.

        Example: `2016-08-25T21:10:29.600Z`
    freeform_tags:
      data_type: Hash[String, String]
      desc: |-
        Free-form tags for this resource. Each tag is a simple key-value pair
         with no predefined name, type, or namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Department\": \"Finance\"}`
    defined_tags:
      data_type: Hash[String, Hash[String, Any]]
      desc: |-
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
    hostname_label:
      data_type: String
      desc: |-
        The hostname for the mount target's IP address, used for
        DNS resolution. The value is the hostname portion of the private IP
        address's fully qualified domain name (FQDN). For example,
        `files-1` in the FQDN `files-1.subnet123.vcn1.oraclevcn.com`.
        Must be unique across all VNICs in the subnet and comply
        with [RFC 952](https://tools.ietf.org/html/rfc952)
        and [RFC 1123](https://tools.ietf.org/html/rfc1123).

        For more information, see
        [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/Content/Network/Concepts/dns.htm).

        Example: `files-1`
    ip_address:
      data_type: String
      desc: |-
        A private IP address of your choice. Must be an available IP address within
        the subnet's CIDR. If you don't specify a value, Oracle automatically
        assigns a private IP address from the subnet.

        Example: `10.0.3.3`
    nsg_ids:
      reference_type: networksecuritygroup
      data_type: Array[String]
      desc: |-
        A list of Network Security Group [OCIDs](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) associated with this mount target.
        A maximum of 5 is allowed.
        Setting this to an empty array after the list is created removes the mount target from all NSGs.
        For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/Content/Network/Concepts/securityrules.htm).
  desc: |-
    Provides access to a collection of file systems through one or more VNICs on a
    specified subnet. The set of file systems is controlled through the
    referenced export set.

    **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
oci_file_storage_export:
  custom: true
  includes:
  - before_actions
  example: |-
    Here is an example on how to use this:

        oci_file_storage_export { 'tenant (root)/my_export5':
          ensure          => 'present',
          file_system     => 'my_file_system',
          mount_target    => 'my_mount_target',
          export_options  => [
            {
              'source' => '0.0.0.0/0',
              'require_privileged_source_port' => false,
              'access' => 'READ_WRITE',
              'identity_squash' => 'NONE',
              'anonymous_uid' => 65534,
              'anonymous_gid' => 65534
            }],
          }
        }
  klass: OCI::FileStorage::Models::Export
  properties:
    export_options:
      data_type: Array[Oci_config::ClientOptions]
      desc: |-
        Export options for the new export. If left unspecified,
        defaults to:

               [
                 {
                    \"source\" : \"0.0.0.0/0\",
                    \"requirePrivilegedSourcePort\" : false,
                    \"access\" : \"READ_WRITE\",
                    \"identitySquash\" : \"NONE\"
                  }
               ]

          **Note:** Mount targets do not have Internet-routable IP
          addresses.  Therefore they will not be reachable from the
          Internet, even if an associated `ClientOptions` item has
          a source of `0.0.0.0/0`.

          **If set to the empty array then the export will not be
          visible to any clients.**

          The export's `exportOptions` can be changed after creation
          using the `UpdateExport` operation.
    export_set_id:
      skip: true
      reference_type: none
      data_type: String
      desc: The OCID of this export's export set.
    file_system_id:
      reference_type: filesystem
      data_type: String
      desc: The OCID of this export's file system.
    id:
      data_type: String
      desc: The OCID of this export.
    lifecycle_state:
      data_type: String
      desc: The current state of this export.
    path:
      data_type: String
      desc: |-
        Path used to access the associated file system.

        Avoid entering confidential information.

        Example: `/mediafiles`
    time_created:
      data_type: Runtime
      desc: |-
        The date and time the export was created, expressed
        in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.

        Example: `2016-08-25T21:10:29.600Z`
  desc: |-
    A file system and the path that you can use to mount it. Each export
    resource belongs to exactly one export set.

    The export's path attribute is not a path in the
    referenced file system, but the value used by clients for the path
    component of the remotetarget argument when mounting the file
    system.

    The path must start with a slash (/) followed by a sequence of zero or more
    slash-separated path elements. For any two export resources associated with
    the same export set, except those in a 'DELETED' state, the path element
    sequence for the first export resource can't contain the
    complete path element sequence of the second export resource.


    For example, the following are acceptable:

      * /example and /path
      * /example1 and /example2
      * /example and /example1

    The following examples are not acceptable:
      * /example and /example/path
      * / and /example

    Paths may not end in a slash (/). No path element can be a period (.)
    or two periods in sequence (..). All path elements must be 255 bytes or less.

    No two non-'DELETED' export resources in the same export set can
    reference the same file system.

    Use `exportOptions` to control access to an export. For more information, see
    [Export Options](https://docs.cloud.oracle.com/Content/File/Tasks/exportoptions.htm).

    **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
