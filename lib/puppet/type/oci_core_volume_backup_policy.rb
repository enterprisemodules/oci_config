# frozen_string_literal: true

#
# See the file "LICENSE" for the full license governing this code.
#
# This code is generated by the type generator. Modification will be overwritten
#
require 'puppet_x/enterprisemodules/oci/core'

Puppet::Type.newtype(:oci_core_volume_backup_policy) do
  include Puppet_X::EnterpriseModules::Oci::Type
  desc <<-DESC
  A policy for automatically creating volume backups according to a
recurring schedule. Has a set of one or more schedules that control when and
how backups are created.

**Warning:** Oracle recommends that you avoid using any confidential information when you
supply string values using the API.

  Here is an example on how to use this:

    oci_core_volume_backup_policy { 'tenant (root)/my_backup_policy':
        ensure              => 'present',
        schedules    => [
          {
            'backup_type' => 'INCREMENTAL',
            'offset_seconds' => 0,
            'period' => 'ONE_WEEK',
            'retention_seconds' => 2419200
          },
          {
            'backup_type' => 'INCREMENTAL',
            'offset_seconds' => 0,
            'period' => 'ONE_MONTH',
            'retention_seconds' => 31557600
          },
          {
            'backup_type' => 'FULL',
            'offset_seconds' => 0,
            'period' => 'ONE_YEAR',
            'retention_seconds' => 157680000
          }],
      }

  This documentation is generated from the [Ruby OCI SDK](https://github.com/oracle/oci-ruby-sdk).

  DESC

  add_title_attributes(:volume_backup_policy_name)

  ensurable

  parameter :name
  parameter :volume_backup_policy_name
  parameter :tenant
  parameter :oci_timeout
  parameter :oci_wait_interval
  parameter :present_states
  parameter :absent_states
  parameter :synchronized
  parameter :compartment
  property  :id
  property  :compartment_id

  property :schedules
  property :time_created
  property :defined_tags
  property :freeform_tags
  property :destination_region

  validate do
    validate_reference_propery(:compartment_id, self)
  end
end
