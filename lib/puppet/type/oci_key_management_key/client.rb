# frozen_string_literal: true

#
# See the file "LICENSE" for the full license governing this code.
#
# This code is generated by the type generator. Modification will be overwritten
#
# rubocop: disable Metrics/AbcSize
def client
  return @client if @client

  vault_client = OCI::KeyManagement::KmsVaultClient.new(:proxy_settings => proxy_config(tenant), :config => tenant_config(tenant), :retry_config => retry_config)
  compartment_id = provider.compartment_id
  if compartment_id.to_s == 'absent'
    compartment_id = if compartment.nil?
                       vault_client.api_client.config.tenancy
                     else
                       resolver.name_to_ocid(tenant, compartment.to_s)
                     end
  end
  full_vault_name = provider.vault == :absent ? vault : provider.vault
  vault_name = full_vault_name.split('/').last
  vault_data = vault_client.send('list_vaults', compartment_id).data.find { |e| e.display_name == vault_name }
  fail "#{path}: vault #{vault} does not exist." if vault_data.nil?

  @client = OCI::KeyManagement::KmsManagementClient.new(:proxy_settings => proxy_config(tenant),
                                                        :config => tenant_config(tenant),
                                                        :endpoint => vault_data.management_endpoint,
                                                        :retry_config => retry_config)
end
# rubocop: enable Metrics/AbcSize
