# frozen_string_literal: true

#
# See the file "LICENSE" for the full license governing this code.
#
# This code is generated by the type generator. Modification will be overwritten
#
require 'puppet_x/enterprisemodules/oci/core'

Puppet::Type.newtype(:oci_file_storage_file_system) do
  include Puppet_X::EnterpriseModules::Oci::Type
  desc <<-DESC
  An NFS file system. To allow access to a file system, add it
to an export set and associate the export set with a mount
target. The same file system can be in multiple export sets and
associated with multiple mount targets.

To use any of the API operations, you must be authorized in an
IAM policy. If you're not authorized, talk to an
administrator. If you're an administrator who needs to write
policies to give users access, see [Getting Started with
Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

**Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.

  Here is an example on how to use this:

    oci_file_storage_file_system { 'tenant (root)/my_file_system':
      ensure              => 'present',
      availability_domain => 'arMl:EU-FRANKFURT-1-AD-1',
    }

  This documentation is generated from the [Ruby OCI SDK](https://github.com/oracle/oci-ruby-sdk).

  DESC

  add_title_attributes(:file_system_name)

  ensurable

  parameter :name
  parameter :file_system_name
  parameter :tenant
  parameter :oci_timeout
  parameter :oci_wait_interval
  parameter :present_states
  parameter :absent_states
  parameter :synchronized
  parameter :compartment
  property  :id
  property  :compartment_id

  property :availability_domain
  property :metered_bytes
  property :lifecycle_state
  property :time_created
  property :freeform_tags
  property :defined_tags
  property :kms_key
  property :kms_key_id
  property :is_clone_parent
  property :is_hydrated
  property :source_snapshot
  property :source_snapshot_id

  validate do
    validate_reference_propery(:compartment_id, self)
    validate_reference_propery(:kms_key_id, self)
    validate_reference_propery(:source_snapshot_id, self)
  end
end
