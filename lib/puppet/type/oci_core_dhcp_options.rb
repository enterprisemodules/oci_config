# frozen_string_literal: true

#
# See the file "LICENSE" for the full license governing this code.
#
# This code is generated by the type generator. Modification will be overwritten
#
require 'puppet_x/enterprisemodules/oci/core'

Puppet::Type.newtype(:oci_core_dhcp_options) do
  include Puppet_X::EnterpriseModules::Oci::Type
  desc <<-DESC
  A set of DHCP options. Used by the VCN to automatically provide configuration
information to the instances when they boot up. There are two options you can set:

- {DhcpDnsOption}: Lets you specify how DNS (hostname resolution) is
handled in the subnets in your VCN.

- {DhcpSearchDomainOption}: Lets you specify
a search domain name to use for DNS queries.

For more information, see  [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/Content/Network/Concepts/dns.htm)
and [DHCP Options](https://docs.cloud.oracle.com/Content/Network/Tasks/managingDHCP.htm).

To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
talk to an administrator. If you're an administrator who needs to write policies to give users access, see
[Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).

**Warning:** Oracle recommends that you avoid using any confidential information when you
supply string values using the API.

  Here is an example on how to use this:

    oci_core_dhcp_options { 'tenant (root)/my_options':
      ensure          => 'present',
      options         => [
      {
        'type' => 'DomainNameServer',
        'custom_dns_servers' => [],
        'server_type' => 'VcnLocalPlusInternet'
      },
      {
        'type' => 'SearchDomain',
        'search_domain_names' => ['vcn.oraclevcn.com']
      }],
      vcn => 'VirtualCloudNetwork-20200103-0949',
    }

  This documentation is generated from the [Ruby OCI SDK](https://github.com/oracle/oci-ruby-sdk).

  DESC

  add_title_attributes(:dhcp_options_name)
  #
  # The include files contain specific non-generated code for the types
  #
  include_file "puppet/type/#{name}/update_and_create_classes", binding

  ensurable

  parameter :name
  parameter :dhcp_options_name
  parameter :tenant
  parameter :oci_timeout
  parameter :oci_wait_interval
  parameter :present_states
  parameter :absent_states
  parameter :synchronized
  parameter :compartment
  property  :id
  property  :compartment_id

  property :defined_tags
  property :freeform_tags
  property :lifecycle_state
  property :options
  property :time_created
  property :vcn
  property :vcn_id
  property :domain_name_type

  validate do
    validate_reference_propery(:compartment_id, self)
    validate_reference_propery(:vcn_id, self)
  end
end
